# Reading pref.tcl
ls
# .git                        ProjectAssignment_SimpleProcessor.pdf  
# .gitignore                  Project_template.docx                  
# 05-22-2025-notes.txt        Project_timeline.pdf                   
# ControlUnit                 README.md                              
# DATA_FROM_CHAT.odt          enum_crash_course.odt                  
# Datapath                    garbage                                
# Launch_ModelSim.bat         testProcessor.sv                       
# Processor                   transcript                             
# Processor2025_Datapath.pdf                                         
cd Processor
# reading modelsim.ini
do runButtonSync.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./ButtonSync.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 09:42:27 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./ButtonSync.sv 
# -- Compiling module ButtonSync
# -- Compiling module ButtonSync_tb
# 
# Top level modules:
# 	ButtonSync_tb
# End time: 09:42:27 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  ButtonSync_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug ButtonSync_tb 
# Start time: 09:42:27 on Jun 07,2025
# Loading sv_std.std
# Loading work.ButtonSync_tb
# Loading work.ButtonSync
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do ButtonSync_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /ButtonSync_tb/Clk
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: rod  Hostname: DESKTOP-36B72F5  ProcessID: 8932
#           Attempting to use alternate WLF file "./wlft35zr4c".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlft35zr4c
# add wave -noupdate /ButtonSync_tb/ResetN
# add wave -noupdate /ButtonSync_tb/Bi
# add wave -noupdate /ButtonSync_tb/Bo
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 Bi = 0, Bo = x
# ** Note: $stop    : ./ButtonSync.sv(91)
#    Time: 90 ps  Iteration: 1  Instance: /ButtonSync_tb
# Break in Module ButtonSync_tb at ./ButtonSync.sv line 91
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 95 ps
# 
# End
do runButtonSync.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work/_lib.qdb".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./ButtonSync.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 09:43:41 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./ButtonSync.sv 
# -- Compiling module ButtonSync
# -- Compiling module ButtonSync_tb
# 
# Top level modules:
# 	ButtonSync_tb
# End time: 09:43:41 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  ButtonSync_tb
# End time: 09:43:43 on Jun 07,2025, Elapsed time: 0:01:16
# Errors: 0, Warnings: 2
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug ButtonSync_tb 
# Start time: 09:43:43 on Jun 07,2025
# Loading sv_std.std
# Loading work.ButtonSync_tb
# Loading work.ButtonSync
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do ButtonSync_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /ButtonSync_tb/Clk
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: rod  Hostname: DESKTOP-36B72F5  ProcessID: 8932
#           Attempting to use alternate WLF file "./wlft7q57xq".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlft7q57xq
# add wave -noupdate /ButtonSync_tb/ResetN
# add wave -noupdate /ButtonSync_tb/Bi
# add wave -noupdate /ButtonSync_tb/Bo
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 Bi = 0, Bo = x
# ** Note: $stop    : ./ButtonSync.sv(92)
#    Time: 90 ps  Iteration: 1  Instance: /ButtonSync_tb
# Break in Module ButtonSync_tb at ./ButtonSync.sv line 92
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 95 ps
# 
# End
do runButtonSync.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./ButtonSync.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 09:45:32 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./ButtonSync.sv 
# -- Compiling module ButtonSync
# -- Compiling module ButtonSync_tb
# ** Error: (vlog-13069) ./ButtonSync.sv(94): near "@": syntax error, unexpected '@', expecting ';'.
# End time: 09:45:32 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 1, Warnings: 0
# ** Error: C:/intelFPGA_lite/20.1/modelsim_ase/win32aloem/vlog failed.
# Error in macro ./runButtonSync.do line 16
# C:/intelFPGA_lite/20.1/modelsim_ase/win32aloem/vlog failed.
#     while executing
# "vlog -work work +acc "./ButtonSync.sv""
do runButtonSync.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./ButtonSync.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 09:45:48 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./ButtonSync.sv 
# -- Compiling module ButtonSync
# -- Compiling module ButtonSync_tb
# 
# Top level modules:
# 	ButtonSync_tb
# End time: 09:45:48 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  ButtonSync_tb
# End time: 09:45:50 on Jun 07,2025, Elapsed time: 0:02:07
# Errors: 1, Warnings: 2
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug ButtonSync_tb 
# Start time: 09:45:50 on Jun 07,2025
# Loading sv_std.std
# Loading work.ButtonSync_tb
# Loading work.ButtonSync
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do ButtonSync_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /ButtonSync_tb/Clk
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: rod  Hostname: DESKTOP-36B72F5  ProcessID: 8932
#           Attempting to use alternate WLF file "./wlft10xi6x".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlft10xi6x
# add wave -noupdate /ButtonSync_tb/ResetN
# add wave -noupdate /ButtonSync_tb/Bi
# add wave -noupdate /ButtonSync_tb/Bo
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 Bi = 0, Bo = x
# ** Note: $stop    : ./ButtonSync.sv(96)
#    Time: 130 ps  Iteration: 1  Instance: /ButtonSync_tb
# Break in Module ButtonSync_tb at ./ButtonSync.sv line 96
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 137 ps
# 
# End
ls
# A.mif               DataPath_old.sv      Processor.qpf      rtl_work             
# A.ver               IR.sv                Processor.qsf      runButtonSync.do     
# ALU.sv              InstMemory.qip       Processor.sv       runMux_8_to_1.do     
# ButtonSync.sv       InstMemory.v         Processor_wave.do  runProcessor.do      
# ButtonSync_wave.do  InstMemory_bb.v      RegAlu.sv          simulation           
# ControlUnit.sv      InstMemory_inst.v    RegisterFile.sv    testProcessor.sv     
# D.mif               KeyFilter.sv         StateDefs.sv       testProcessor_og.sv  
# D.ver               Launch_ModelSim.bat  StateMachine.sv    transcript           
# DataMemory.qip      Mux_2_to_1.sv        db                 vsim.wlf             
# DataMemory.v        Mux_8_to_1.sv        incremental_db     wlft10xi6x           
# DataMemory_bb.v     Mux_8_to_1_wave.do   modelsim.ini       wlft35zr4c           
# DataPath.sv         PC.sv                output_files       wlft7q57xq           
do runMux_8_to_1.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Mux_8_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 09:56:30 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_8_to_1.sv 
# -- Compiling module Mux_8_to_1
# -- Compiling module Mux_8_to_1_tb
# 
# Top level modules:
# 	Mux_8_to_1_tb
# End time: 09:56:30 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Mux_8_to_1_tb
# End time: 09:56:32 on Jun 07,2025, Elapsed time: 0:10:42
# Errors: 0, Warnings: 2
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Mux_8_to_1_tb 
# Start time: 09:56:32 on Jun 07,2025
# Loading sv_std.std
# Loading work.Mux_8_to_1_tb
# Loading work.Mux_8_to_1
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Mux_8_to_1_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Mux_8_to_1_tb/A
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: rod  Hostname: DESKTOP-36B72F5  ProcessID: 8932
#           Attempting to use alternate WLF file "./wlft66j18d".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlft66j18d
# add wave -noupdate /Mux_8_to_1_tb/B
# add wave -noupdate /Mux_8_to_1_tb/C
# add wave -noupdate /Mux_8_to_1_tb/D
# add wave -noupdate /Mux_8_to_1_tb/E
# add wave -noupdate /Mux_8_to_1_tb/F
# add wave -noupdate /Mux_8_to_1_tb/G
# add wave -noupdate /Mux_8_to_1_tb/H
# add wave -noupdate /Mux_8_to_1_tb/SE
# add wave -noupdate /Mux_8_to_1_tb/MO
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	000	0000000000000000
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	001	0000000000000000
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	010	0000000000000000
# 0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	000	0000000000000001
# 0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	001	0000000000000001
# 0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	010	0000000000000001
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0001001000010101	0011010100100100	000	0000000000000000
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1100000010001001	0101111010000001	001	1111111111111111
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1000010010000100	1101011000001001	010	1111111111111111
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1011000111110000	0101011001100011	000	1111111111111111
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000011010111001	0111101100001101	001	0000000000000000
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0100011011011111	1001100110001101	010	0000000000000000
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1011001011000010	1000010001100101	000	1111111111111111
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1000100100110111	0101001000010010	001	1111111111111111
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000011110011	1110001100000001	010	0000000000000000
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000011011010111	1100110100001101	000	0000000000000000
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0011101100100011	1111000101110110	001	0000000000000000
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0001111010001101	1100110100111101	010	0000000000000000
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0111011011010100	0101011111101101	000	0000000000000000
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0100011000101101	1111011110001100	001	0000000000000000
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0111110011111101	1110100111111001	010	0000000000000000
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1110001100110111	0010010011000110	000	1111111111111111
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1110001011110111	1000010011000101	001	1111111111111111
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1101010100010011	1101001010101010	010	1111111111111111
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0111001010101111	1111011111100101	000	0000000000000000
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1011101111010010	0111001001110111	001	1111111111111111
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1000100100110010	1101011000010010	010	1111111111111111
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0100011111101100	1101101110001111	000	0000000000000000
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0111100100110000	0110100111110010	001	0000000000000000
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1110011101110110	1001011011001110	010	1111111111111111
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111010000000000	0111101011101000	000	1111111111111111
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1110001011001010	0100111011000101	001	1111111111111111
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0010111001011000	0100100101011100	010	0000000000000000
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1101111010001110	0010100010111101	000	1111111111111111
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1001011010101011	0101100000101101	001	1111111111111111
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1011001010100111	0010011001100101	010	1111111111111111
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1011000111101111	0110001001100011	000	1111111111111111
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000010101110011	1000011100001010	001	0000000000000000
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1100000000111011	0010001010000000	010	1111111111111111
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0001000001100100	0010000100100000	000	0000000000000000
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0101010101111000	0100010110101010	001	0000000000000000
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1100111011001100	1100110010011101	010	1111111111111111
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1100101100100000	0011111010010110	000	1111111111111111
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1000100110000011	1011100000010011	001	1111111111111111
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1000011010111100	0011100000001101	010	1111111111111111
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1010100110100111	1101011001010011	000	1111111111111111
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0011010110011111	1101110101101011	001	0000000000000000
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1110101010100110	0010101011010101	010	1111111111111111
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1000000100010111	0100101000000010	000	1111111111111111
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1101011101010110	0011111010101110	001	1111111111111111
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000111011111111	1110100100011101	010	0000000000000000
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1110011111000101	0111001011001111	000	1111111111111111
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0001000110000100	0100100100100011	001	0000000000000000
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000010100001001	0110010100001010	010	0000000000000000
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1110010101110011	0000101011001010	000	1111111111111111
# 1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1111111111111111	1001111000110001	0100110000111100	001	1111111111111111
# ** Note: $stop    : ./Mux_8_to_1.sv(58)
#    Time: 2800 ps  Iteration: 0  Instance: /Mux_8_to_1_tb
# Break in Module Mux_8_to_1_tb at ./Mux_8_to_1.sv line 58
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 2940 ps
# 
# End
do runMux_8_to_1.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work/_lib.qdb".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Mux_8_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 09:58:30 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_8_to_1.sv 
# -- Compiling module Mux_8_to_1
# -- Compiling module Mux_8_to_1_tb
# 
# Top level modules:
# 	Mux_8_to_1_tb
# End time: 09:58:30 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Mux_8_to_1_tb
# End time: 09:58:32 on Jun 07,2025, Elapsed time: 0:02:00
# Errors: 0, Warnings: 2
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Mux_8_to_1_tb 
# Start time: 09:58:32 on Jun 07,2025
# Loading sv_std.std
# Loading work.Mux_8_to_1_tb
# Loading work.Mux_8_to_1
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Mux_8_to_1_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Mux_8_to_1_tb/A
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: rod  Hostname: DESKTOP-36B72F5  ProcessID: 8932
#           Attempting to use alternate WLF file "./wlftex4gin".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlftex4gin
# add wave -noupdate /Mux_8_to_1_tb/B
# add wave -noupdate /Mux_8_to_1_tb/C
# add wave -noupdate /Mux_8_to_1_tb/D
# add wave -noupdate /Mux_8_to_1_tb/E
# add wave -noupdate /Mux_8_to_1_tb/F
# add wave -noupdate /Mux_8_to_1_tb/G
# add wave -noupdate /Mux_8_to_1_tb/H
# add wave -noupdate /Mux_8_to_1_tb/SE
# add wave -noupdate /Mux_8_to_1_tb/MO
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	000	0000000000000000
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	001	0000000000000000
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	010	0000000000000000
# 0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	000	0000000000000001
# 0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	001	0000000000000001
# 0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	010	0000000000000001
# 0001001000010101	0011010100100100	1100000010001001	0101111010000001	1000010010000100	1101011000001001	1011000111110000	0101011001100011	000	0001001000010101
# 0000011010111001	0111101100001101	0100011011011111	1001100110001101	1011001011000010	1000010001100101	1000100100110111	0101001000010010	001	0111101100001101
# 0000000011110011	1110001100000001	0000011011010111	1100110100001101	0011101100100011	1111000101110110	0001111010001101	1100110100111101	010	0000011011010111
# 0111011011010100	0101011111101101	0100011000101101	1111011110001100	0111110011111101	1110100111111001	1110001100110111	0010010011000110	000	0111011011010100
# 1110001011110111	1000010011000101	1101010100010011	1101001010101010	0111001010101111	1111011111100101	1011101111010010	0111001001110111	001	1000010011000101
# 1000100100110010	1101011000010010	0100011111101100	1101101110001111	0111100100110000	0110100111110010	1110011101110110	1001011011001110	010	0100011111101100
# 1111010000000000	0111101011101000	1110001011001010	0100111011000101	0010111001011000	0100100101011100	1101111010001110	0010100010111101	000	1111010000000000
# 1001011010101011	0101100000101101	1011001010100111	0010011001100101	1011000111101111	0110001001100011	0000010101110011	1000011100001010	001	0101100000101101
# 1100000000111011	0010001010000000	0001000001100100	0010000100100000	0101010101111000	0100010110101010	1100111011001100	1100110010011101	010	0001000001100100
# 1100101100100000	0011111010010110	1000100110000011	1011100000010011	1000011010111100	0011100000001101	1010100110100111	1101011001010011	000	1100101100100000
# 0011010110011111	1101110101101011	1110101010100110	0010101011010101	1000000100010111	0100101000000010	1101011101010110	0011111010101110	001	1101110101101011
# 0000111011111111	1110100100011101	1110011111000101	0111001011001111	0001000110000100	0100100100100011	0000010100001001	0110010100001010	010	1110011111000101
# 1110010101110011	0000101011001010	1001111000110001	0100110000111100	0111100101101000	1011110111110010	0100010100101110	0110000110001010	000	1110010101110011
# 0010000011000100	1011001101000001	1110110001001011	0011010011011000	0011110000100000	1111001101111000	1100010010001010	0001001010001001	001	1011001101000001
# 0111010111000101	0000110111101011	0101101100000010	0110010110110110	0110001101001011	1111100111000110	0101011100010101	0001001110101110	010	0101101100000010
# 1101111001110101	0000001010111100	0001010100001111	1101110100101010	1000010111010111	1001101000001011	1011100010010111	1011111001110001	000	1101111001110101
# 0100001011110010	0100000110000101	0010011111110010	0101010101001111	1001110111001100	0110000000111011	0001110100000110	0011001100111010	001	0100000110000101
# 1011111100100011	0011001001111110	0000101010101010	0100101100010101	0111100011011001	1001101111110001	0110110010011100	0100101111011001	010	0000101010101010
# 0011000100100011	0000011101100010	0010011000110101	1111101101001100	0100111110100001	0101010110011111	0100011110111001	1010000110001111	000	0011000100100011
# 0111110001101101	1010100111111000	1101101111001101	0110000010110111	1100111111000100	0101011010011111	1010111001111101	1001010001011100	001	1010100111111000
# 1010110111001011	1100000001011011	0100010011011110	0011011110001001	1010010010101110	0011001001001001	1110100000100011	0011111011010000	010	0100010011011110
# 1110101111111110	1100000011010111	1010100011000111	1111110001010001	0100101100100001	0010111110010110	0000011000011101	0111111100001100	000	1110101111111110
# 1110000100101100	1100111011000010	0110010001010111	1110110111001000	1011101110000010	0101101001110111	0001111011110010	1110110100111101	001	1100111011000010
# 0000100100001100	1101101100010010	1011111100000101	0000000001111110	0011011011100101	1000000101101101	0001110011011001	1110011100111001	010	1011111100000101
# 0000111111010010	1000111100011111	1110100111101011	1111011011010011	0100001011011001	0010111110000101	1011110000010100	1000100001111000	000	0000111111010010
# 0010110111011010	0101100101011011	0010010010001011	0100101101001001	1001111111110010	1010111000111111	0001010100001100	1010111100101010	001	0101100101011011
# 0010110000010101	0110001101011000	1100001100111111	0011100010000110	1100011100011010	0000110010001110	1100111000101111	1111001010011100	010	1100001100111111
# 0111110100110101	1001100111111010	1001001101111101	1011110000100110	0011100110010110	0001011101110011	1101000110001011	1011010010100011	000	0111110100110101
# 1001011110011001	1010100000101111	1101100111010010	1001001010110011	1010111111011000	0101011001011111	0010001000101001	0000110101000100	001	1010100000101111
# 0111101111111000	1111110111110111	1110010110011011	0011011011001011	1111001100001001	0001101011100110	0010110100101000	1101101101011010	010	1110010110011011
# 0001010011001111	1100000100101001	1111011010000010	1110001011101101	1110110101010011	0110110011011010	1011001010011111	1011011001100101	000	0001010011001111
# 1101101010001010	1110001010110101	1110111110111110	1001010011011111	0011110011110001	0001100101111001	0010001000110001	1111111101000100	001	1110001010110101
# 1110100001110100	0000110011010000	0001010100001001	0000101100101010	0101010111110110	1010110110101011	0000011101101111	1100111100001110	010	0001010100001001
# 0110111001011101	1010110111011100	1100110101011110	1011110010011010	1111111011011111	0111001011111101	1110000111110001	0000001011000011	000	0110111001011101
# 0010101100001110	1110110101010110	0010011101111001	1110100101001110	1011001111011001	0111011001100111	1000010100110001	0011010000001010	001	1110110101010110
# 0101101101101111	1011100110110110	1001110000001110	1000101000111000	0011110011010001	1000011101111001	1101110000101011	1100010010111000	010	1001110000001110
# 0100101001110100	1011111110010100	0100100111000110	0101110110010011	1000001000111111	0010110000000100	1010110010110111	1100101001011001	000	0100101001110100
# 0110110111001011	0110100111011011	1010011011111100	1101111001001101	0110110010110000	1011011111011001	1011011010100100	0010011001101101	001	0110100111011011
# 1011101101000101	1110001001110110	0110010100111011	0100100111001010	0101101100010111	0010110110110110	0100101010010011	0111000110010101	010	0110010100111011
# 1010001100000111	0001101001000110	0000001001110100	1001101100000100	0111101111010010	0110000111110111	0011010010011000	0000011101101001	000	1010001100000111
# 1101101001101110	1011101010110100	0100010000000001	1000110110001000	0001010001111100	1101100100101000	1001011010010000	0000010000101101	001	1011101010110100
# 1110001111000101	0011000011000111	1001011101011100	1001110000101110	1000010001110111	1110010000001000	0000111001000001	0100010100011100	010	1001011101011100
# 1111111010100111	1010011011111101	0001010010011110	0000011100101001	1000111000110111	1001000000011100	0100001100110101	0110011110000110	000	1111111010100111
# 1110110100110100	0000100011011010	1001111010110111	1100011000111101	0011001101001110	1010011101100110	1011100001010101	1100010001110000	001	0000100011011010
# 1011100111110101	0000010001110011	0101110101110001	1001100110111010	0010111100111010	1011001101011110	0111110101000111	0111100111111010	010	0101110101110001
# 0110101010001110	0000010111010101	1000110100100100	1111011000011010	1101110011110000	0000000010111001	0001101110000111	0110000100110111	000	0110101010001110
# 0100101100100111	0011011110010110	0110000000111001	0010000111000000	0001001100100101	1001111100100110	1101101101000110	0001101010110110	001	0011011110010110
# 0011111010011001	1000001101111101	0110111001011111	0000111111011100	0100001101100001	0101011110000110	0011110000000011	1111111101111000	010	0110111001011111
# 0011111101011010	1001101101111110	1110110110001101	1000000011011011	1110011111000011	1011011011001111	0011110011101101	0010101101111001	000	0011111101011010
# 1111110100101000	1110010011111010	1011000010111100	1110111001100001	0000101110010100	0000100100010111	1101000011110101	0111100010100001	001	1110010011111010
# ** Note: $stop    : ./Mux_8_to_1.sv(58)
#    Time: 2800 ps  Iteration: 0  Instance: /Mux_8_to_1_tb
# Break in Module Mux_8_to_1_tb at ./Mux_8_to_1.sv line 58
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 2940 ps
# 
# End
do runMux_8_to_1.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./Mux_8_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 09:59:25 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_8_to_1.sv 
# -- Compiling module Mux_8_to_1
# -- Compiling module Mux_8_to_1_tb
# 
# Top level modules:
# 	Mux_8_to_1_tb
# End time: 09:59:25 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Mux_8_to_1_tb
# End time: 09:59:26 on Jun 07,2025, Elapsed time: 0:00:54
# Errors: 0, Warnings: 2
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Mux_8_to_1_tb 
# Start time: 09:59:26 on Jun 07,2025
# Loading sv_std.std
# Loading work.Mux_8_to_1_tb
# Loading work.Mux_8_to_1
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Mux_8_to_1_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Mux_8_to_1_tb/A
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: rod  Hostname: DESKTOP-36B72F5  ProcessID: 8932
#           Attempting to use alternate WLF file "./wlfthbg0b6".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlfthbg0b6
# add wave -noupdate /Mux_8_to_1_tb/B
# add wave -noupdate /Mux_8_to_1_tb/C
# add wave -noupdate /Mux_8_to_1_tb/D
# add wave -noupdate /Mux_8_to_1_tb/E
# add wave -noupdate /Mux_8_to_1_tb/F
# add wave -noupdate /Mux_8_to_1_tb/G
# add wave -noupdate /Mux_8_to_1_tb/H
# add wave -noupdate /Mux_8_to_1_tb/SE
# add wave -noupdate /Mux_8_to_1_tb/MO
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	000	0000000000000000
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	001	0000000000000000
# 0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	0000000000000000	010	0000000000000000
# 0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	000	0000000000000001
# 0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	001	0000000000000001
# 0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	0000000000000001	010	0000000000000001
# 0001001000010101	0011010100100100	1100000010001001	0101111010000001	1000010010000100	1101011000001001	1011000111110000	0101011001100011	000	0001001000010101
# 0000011010111001	0111101100001101	0100011011011111	1001100110001101	1011001011000010	1000010001100101	1000100100110111	0101001000010010	001	0111101100001101
# 0000000011110011	1110001100000001	0000011011010111	1100110100001101	0011101100100011	1111000101110110	0001111010001101	1100110100111101	010	0000011011010111
# 0111011011010100	0101011111101101	0100011000101101	1111011110001100	0111110011111101	1110100111111001	1110001100110111	0010010011000110	011	1111011110001100
# 1110001011110111	1000010011000101	1101010100010011	1101001010101010	0111001010101111	1111011111100101	1011101111010010	0111001001110111	100	0111001010101111
# 1000100100110010	1101011000010010	0100011111101100	1101101110001111	0111100100110000	0110100111110010	1110011101110110	1001011011001110	101	0110100111110010
# 1111010000000000	0111101011101000	1110001011001010	0100111011000101	0010111001011000	0100100101011100	1101111010001110	0010100010111101	110	1101111010001110
# 1001011010101011	0101100000101101	1011001010100111	0010011001100101	1011000111101111	0110001001100011	0000010101110011	1000011100001010	111	1000011100001010
# 1100000000111011	0010001010000000	0001000001100100	0010000100100000	0101010101111000	0100010110101010	1100111011001100	1100110010011101	000	1100000000111011
# 1100101100100000	0011111010010110	1000100110000011	1011100000010011	1000011010111100	0011100000001101	1010100110100111	1101011001010011	001	0011111010010110
# 0011010110011111	1101110101101011	1110101010100110	0010101011010101	1000000100010111	0100101000000010	1101011101010110	0011111010101110	010	1110101010100110
# 0000111011111111	1110100100011101	1110011111000101	0111001011001111	0001000110000100	0100100100100011	0000010100001001	0110010100001010	011	0111001011001111
# 1110010101110011	0000101011001010	1001111000110001	0100110000111100	0111100101101000	1011110111110010	0100010100101110	0110000110001010	100	0111100101101000
# 0010000011000100	1011001101000001	1110110001001011	0011010011011000	0011110000100000	1111001101111000	1100010010001010	0001001010001001	101	1111001101111000
# 0111010111000101	0000110111101011	0101101100000010	0110010110110110	0110001101001011	1111100111000110	0101011100010101	0001001110101110	110	0101011100010101
# 1101111001110101	0000001010111100	0001010100001111	1101110100101010	1000010111010111	1001101000001011	1011100010010111	1011111001110001	111	1011111001110001
# 0100001011110010	0100000110000101	0010011111110010	0101010101001111	1001110111001100	0110000000111011	0001110100000110	0011001100111010	000	0100001011110010
# 1011111100100011	0011001001111110	0000101010101010	0100101100010101	0111100011011001	1001101111110001	0110110010011100	0100101111011001	001	0011001001111110
# 0011000100100011	0000011101100010	0010011000110101	1111101101001100	0100111110100001	0101010110011111	0100011110111001	1010000110001111	010	0010011000110101
# 0111110001101101	1010100111111000	1101101111001101	0110000010110111	1100111111000100	0101011010011111	1010111001111101	1001010001011100	011	0110000010110111
# 1010110111001011	1100000001011011	0100010011011110	0011011110001001	1010010010101110	0011001001001001	1110100000100011	0011111011010000	100	1010010010101110
# 1110101111111110	1100000011010111	1010100011000111	1111110001010001	0100101100100001	0010111110010110	0000011000011101	0111111100001100	101	0010111110010110
# 1110000100101100	1100111011000010	0110010001010111	1110110111001000	1011101110000010	0101101001110111	0001111011110010	1110110100111101	110	0001111011110010
# 0000100100001100	1101101100010010	1011111100000101	0000000001111110	0011011011100101	1000000101101101	0001110011011001	1110011100111001	111	1110011100111001
# 0000111111010010	1000111100011111	1110100111101011	1111011011010011	0100001011011001	0010111110000101	1011110000010100	1000100001111000	000	0000111111010010
# 0010110111011010	0101100101011011	0010010010001011	0100101101001001	1001111111110010	1010111000111111	0001010100001100	1010111100101010	001	0101100101011011
# 0010110000010101	0110001101011000	1100001100111111	0011100010000110	1100011100011010	0000110010001110	1100111000101111	1111001010011100	010	1100001100111111
# 0111110100110101	1001100111111010	1001001101111101	1011110000100110	0011100110010110	0001011101110011	1101000110001011	1011010010100011	011	1011110000100110
# 1001011110011001	1010100000101111	1101100111010010	1001001010110011	1010111111011000	0101011001011111	0010001000101001	0000110101000100	100	1010111111011000
# 0111101111111000	1111110111110111	1110010110011011	0011011011001011	1111001100001001	0001101011100110	0010110100101000	1101101101011010	101	0001101011100110
# 0001010011001111	1100000100101001	1111011010000010	1110001011101101	1110110101010011	0110110011011010	1011001010011111	1011011001100101	110	1011001010011111
# 1101101010001010	1110001010110101	1110111110111110	1001010011011111	0011110011110001	0001100101111001	0010001000110001	1111111101000100	111	1111111101000100
# 1110100001110100	0000110011010000	0001010100001001	0000101100101010	0101010111110110	1010110110101011	0000011101101111	1100111100001110	000	1110100001110100
# 0110111001011101	1010110111011100	1100110101011110	1011110010011010	1111111011011111	0111001011111101	1110000111110001	0000001011000011	001	1010110111011100
# 0010101100001110	1110110101010110	0010011101111001	1110100101001110	1011001111011001	0111011001100111	1000010100110001	0011010000001010	010	0010011101111001
# 0101101101101111	1011100110110110	1001110000001110	1000101000111000	0011110011010001	1000011101111001	1101110000101011	1100010010111000	011	1000101000111000
# 0100101001110100	1011111110010100	0100100111000110	0101110110010011	1000001000111111	0010110000000100	1010110010110111	1100101001011001	100	1000001000111111
# 0110110111001011	0110100111011011	1010011011111100	1101111001001101	0110110010110000	1011011111011001	1011011010100100	0010011001101101	101	1011011111011001
# 1011101101000101	1110001001110110	0110010100111011	0100100111001010	0101101100010111	0010110110110110	0100101010010011	0111000110010101	110	0100101010010011
# 1010001100000111	0001101001000110	0000001001110100	1001101100000100	0111101111010010	0110000111110111	0011010010011000	0000011101101001	111	0000011101101001
# 1101101001101110	1011101010110100	0100010000000001	1000110110001000	0001010001111100	1101100100101000	1001011010010000	0000010000101101	000	1101101001101110
# 1110001111000101	0011000011000111	1001011101011100	1001110000101110	1000010001110111	1110010000001000	0000111001000001	0100010100011100	001	0011000011000111
# 1111111010100111	1010011011111101	0001010010011110	0000011100101001	1000111000110111	1001000000011100	0100001100110101	0110011110000110	010	0001010010011110
# 1110110100110100	0000100011011010	1001111010110111	1100011000111101	0011001101001110	1010011101100110	1011100001010101	1100010001110000	011	1100011000111101
# 1011100111110101	0000010001110011	0101110101110001	1001100110111010	0010111100111010	1011001101011110	0111110101000111	0111100111111010	100	0010111100111010
# 0110101010001110	0000010111010101	1000110100100100	1111011000011010	1101110011110000	0000000010111001	0001101110000111	0110000100110111	101	0000000010111001
# 0100101100100111	0011011110010110	0110000000111001	0010000111000000	0001001100100101	1001111100100110	1101101101000110	0001101010110110	110	1101101101000110
# 0011111010011001	1000001101111101	0110111001011111	0000111111011100	0100001101100001	0101011110000110	0011110000000011	1111111101111000	111	1111111101111000
# 0011111101011010	1001101101111110	1110110110001101	1000000011011011	1110011111000011	1011011011001111	0011110011101101	0010101101111001	000	0011111101011010
# 1111110100101000	1110010011111010	1011000010111100	1110111001100001	0000101110010100	0000100100010111	1101000011110101	0111100010100001	001	1110010011111010
# ** Note: $stop    : ./Mux_8_to_1.sv(58)
#    Time: 2800 ps  Iteration: 0  Instance: /Mux_8_to_1_tb
# Break in Module Mux_8_to_1_tb at ./Mux_8_to_1.sv line 58
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 2940 ps
# 
# End
# End time: 11:06:41 on Jun 07,2025, Elapsed time: 1:07:15
# Errors: 0, Warnings: 2
