# Reading pref.tcl
do runProject.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./ButtonSync.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:50 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./ButtonSync.sv 
# -- Compiling module ButtonSync
# -- Compiling module ButtonSync_tb
# 
# Top level modules:
# 	ButtonSync_tb
# End time: 15:13:50 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./KeyFilter.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:50 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./KeyFilter.sv 
# -- Compiling module KeyFilter
# 
# Top level modules:
# 	KeyFilter
# End time: 15:13:50 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_8_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:50 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_8_to_1.sv 
# -- Compiling module Mux_8_to_1
# -- Compiling module Mux_8_to_1_tb
# 
# Top level modules:
# 	Mux_8_to_1_tb
# End time: 15:13:50 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Decoder.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:50 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./Decoder.sv 
# -- Compiling module Decoder
# -- Compiling module Decoder_tb
# 
# Top level modules:
# 	Decoder_tb
# End time: 15:13:50 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:50 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 15:13:50 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:50 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 15:13:50 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:50 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:13:51 on Jun 07,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:51 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:13:51 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:51 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:13:51 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:51 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 15:13:51 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:51 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 15:13:51 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:51 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 15:13:51 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:51 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 15:13:51 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:51 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 15:13:51 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:51 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 15:13:51 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:51 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 15:13:51 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Project.sv"  
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:51 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./Project.sv 
# -- Compiling module Project
# -- Compiling module Project_tb
# ** Warning: ./Project.sv(120): (vlog-2600) [RDGN] - Redundant digits in numeric literal.
# ** Warning: ./Project.sv(121): (vlog-2600) [RDGN] - Redundant digits in numeric literal.
# 
# Top level modules:
# 	Project_tb
# End time: 15:13:51 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Project_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Project_tb 
# Start time: 15:13:51 on Jun 07,2025
# Loading sv_std.std
# Loading work.Project_tb
# Loading work.Project
# Loading work.ButtonSync
# Loading work.KeyFilter
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# ** Error (suppressible): (vsim-3009) [TSCALE] - Module 'Project_tb' does not have a timeunit/timeprecision specification in effect, but other modules do.
#    Time: 0 ps  Iteration: 0  Instance: /Project_tb/dut/unit_P/unit_CU File: ./ControlUnit.sv
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading work.Mux_8_to_1
# Error loading design
# Error: Error loading design
#        Pausing macro execution
# MACRO ./runProject.do PAUSED at line 38
do runProject.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./ButtonSync.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:19 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./ButtonSync.sv 
# -- Compiling module ButtonSync
# -- Compiling module ButtonSync_tb
# 
# Top level modules:
# 	ButtonSync_tb
# End time: 15:14:19 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./KeyFilter.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:20 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./KeyFilter.sv 
# -- Compiling module KeyFilter
# 
# Top level modules:
# 	KeyFilter
# End time: 15:14:20 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_8_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:20 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_8_to_1.sv 
# -- Compiling module Mux_8_to_1
# -- Compiling module Mux_8_to_1_tb
# 
# Top level modules:
# 	Mux_8_to_1_tb
# End time: 15:14:20 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Decoder.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:20 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./Decoder.sv 
# -- Compiling module Decoder
# -- Compiling module Decoder_tb
# 
# Top level modules:
# 	Decoder_tb
# End time: 15:14:20 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:20 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 15:14:20 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:20 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 15:14:20 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:20 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:14:20 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:20 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:14:20 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:20 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:14:20 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:20 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 15:14:20 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:20 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 15:14:20 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:20 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 15:14:20 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:20 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 15:14:20 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:20 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 15:14:21 on Jun 07,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:21 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 15:14:21 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:21 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 15:14:21 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Project.sv"  
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:21 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./Project.sv 
# -- Compiling module Project
# -- Compiling module Project_tb
# ** Warning: ./Project.sv(122): (vlog-2600) [RDGN] - Redundant digits in numeric literal.
# ** Warning: ./Project.sv(123): (vlog-2600) [RDGN] - Redundant digits in numeric literal.
# 
# Top level modules:
# 	Project_tb
# End time: 15:14:21 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 2
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  Project_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug Project_tb 
# Start time: 15:13:51 on Jun 07,2025
# Loading sv_std.std
# Loading work.Project_tb
# Loading work.Project
# Loading work.ButtonSync
# Loading work.KeyFilter
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading work.Mux_8_to_1
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# Loading work.Decoder
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Project_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /Project_tb/SW
# add wave -noupdate /Project_tb/KEY
# add wave -noupdate /Project_tb/CLOCK_50
# add wave -noupdate /Project_tb/LEDR
# add wave -noupdate /Project_tb/LEDG
# add wave -noupdate /Project_tb/HEX0
# add wave -noupdate /Project_tb/HEX1
# add wave -noupdate /Project_tb/HEX2
# add wave -noupdate /Project_tb/HEX3
# add wave -noupdate /Project_tb/HEX4
# add wave -noupdate /Project_tb/HEX5
# add wave -noupdate /Project_tb/HEX6
# add wave -noupdate /Project_tb/HEX7
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# Time=0 | LEDR=000000000000000000 | LEDG=0000 | HEX0=1010101
# Time=50000 | LEDR=000000000000000000 | LEDG=0100 | HEX0=1010101
# Time=70000 | LEDR=000000000000000000 | LEDG=0000 | HEX0=1010101
# Time=170000 | LEDR=000000000000000000 | LEDG=0001 | HEX0=1010101
# Time=190000 | LEDR=000000000000000000 | LEDG=0000 | HEX0=1010101
# Time=290000 | LEDR=000000000000000001 | LEDG=0000 | HEX0=1010101
# Time=390000 | LEDR=010000000000000010 | LEDG=0000 | HEX0=1010101
# Simulation running...
# ** Note: $stop    : ./Project.sv(130)
#    Time: 1490 ns  Iteration: 0  Instance: /Project_tb
# Break in Module Project_tb at ./Project.sv line 130
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 1564500 ps
# 
# End
cd ..
# Cannot change directory while a simulation is in progress.
# Use the "quit -sim" command to unload the design first.
quit -sim
# End time: 15:17:44 on Jun 07,2025, Elapsed time: 0:03:53
# Errors: 1, Warnings: 0
ls
# A.mif
# A.ver
# ALU.sv
# ButtonSync.sv
# ButtonSync_wave.do
# ControlUnit.sv
# D.mif
# D.ver
# DataMemory.v
# DataMemory_bb.v
# DataPath.sv
# db
# Decoder.sv
# incremental_db
# InstMemory.qip
# InstMemory.v
# InstMemory_bb.v
# InstMemory_inst.v
# IR.sv
# KeyFilter.sv
# Launch_ModelSim.bat
# modelsim.ini
# Mux_2_to_1.sv
# Mux_8_to_1.sv
# Mux_8_to_1_wave.do
# output_files
# PC.sv
# Processor.sv
# Processor_wave.do
# Processor2025_TestprocessorKeyConditionerSDC.pdf
# Project.qpf
# Project.qsf
# Project.qsf.bak
# Project.qws
# Project.sdc
# Project.sv
# Project.sv.bak
# Project_nativelink_simulation.rpt
# Project_wave.do
# RegisterFile.sv
# rtl_work
# runProject.do
# simulation
# StateDefs.sv
# StateMachine.sv
# StateMachine.sv.bak
# testProcessor.sv
# transcript
# vsim.wlf
cd ..
# reading C:/intelFPGA_lite/20.1/modelsim_ase/win32aloem/../modelsim.ini
cd Pro
# couldn't change working directory to "Pro": no such file or directory
cd Project
# reading modelsim.ini

ls
# A.mif
# A.ver
# ALU.sv
# ButtonSync.sv
# ButtonSync_wave.do
# ControlUnit.sv
# D.mif
# D.ver
# DataMemory.v
# DataMemory_bb.v
# DataPath.sv
# db
# Decoder.sv
# incremental_db
# InstMemory.qip
# InstMemory.v
# InstMemory_bb.v
# InstMemory_inst.v
# IR.sv
# KeyFilter.sv
# Launch_ModelSim.bat
# modelsim.ini
# Mux_2_to_1.sv
# Mux_8_to_1.sv
# Mux_8_to_1_wave.do
# output_files
# PC.sv
# Processor.sv
# Processor_wave.do
# Processor2025_TestprocessorKeyConditionerSDC.pdf
# Project.qpf
# Project.qsf
# Project.qsf.bak
# Project.qws
# Project.sdc
# Project.sv
# Project.sv.bak
# Project_nativelink_simulation.rpt
# Project_wave.do
# RegisterFile.sv
# rtl_work
# runProject.do
# simulation
# StateDefs.sv
# StateMachine.sv
# StateMachine.sv.bak
# testProcessor.sv
# transcript
# vsim.wlf
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:43 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 15:18:43 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:43 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:18:43 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:44 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:18:44 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:44 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:18:44 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:44 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 15:18:44 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:44 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 15:18:44 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:44 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 15:18:44 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:44 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 15:18:44 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:44 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 15:18:44 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:44 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 15:18:44 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:44 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 15:18:44 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:44 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 15:18:44 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:44 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 15:18:44 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 15:18:44 on Jun 07,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Processor_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 
# Begin Simulation.
# Time is 0 : Reset = 0   PC_Out = xx   IR_Out = xxxx  State = x  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 10000 : Reset = 0   PC_Out = xx   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 30000 : Reset = 0   PC_Out = 00   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 40000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 50000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 70000 : Reset = 1   PC_Out = 01   IR_Out = 7000  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 90000 : Reset = 1   PC_Out = 01   IR_Out = 7000  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 110000 : Reset = 1   PC_Out = 00   IR_Out = 7000  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 130000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 150000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 170000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 190000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 210000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 230000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 250000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 270000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 290000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 310000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 330000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 350000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 370000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = 0000  RA Address = 0000
# Time is 390000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 4  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0010
# Time is 410000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 8  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0000
# Time is 430000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 9  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0000
# Time is 450000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 2  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0000
# Time is 470000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 6  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0000
# Time is 490000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 8  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0000
# Time is 510000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 9  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0000
# Time is 530000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 3  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0000
# Time is 550000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 8  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0000
# Time is 570000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 9  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0000
# Time is 590000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 2  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0000
# Time is 610000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 6  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0000
# Time is 630000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 8  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0000
# Time is 650000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 9  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0000
# Time is 670000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 4  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0000
# Time is 690000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 8  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0000
# Time is 710000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 9  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0000
# Time is 730000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 1  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0000
# Time is 750000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 8  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0000
# Time is 770000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 9  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0000
# Time is 790000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 1  ALU A = xxxx  ALU B = 0000 ALU Out = 0000  RA Address = 1010
# Time is 810000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 8  ALU A = 0000  ALU B = 0000 ALU Out = 0000  RA Address = 0000
# 
# End of Simulation.
# 
# ** Note: $stop    : ./testProcessor.sv(32)
#    Time: 830 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 32
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 871500 ps
# 
# End
# WARNING: No extended dataflow license exists
quit -sim
# End time: 15:40:41 on Jun 07,2025, Elapsed time: 0:21:57
# Errors: 0, Warnings: 0
ls
# A.mif
# A.ver
# ALU.sv
# ButtonSync.sv
# ButtonSync_wave.do
# ControlUnit.sv
# cr_ie_info.json
# D.mif
# D.ver
# DataMemory.v
# DataMemory_bb.v
# DataPath.sv
# db
# Decoder.sv
# incremental_db
# InstMemory.qip
# InstMemory.v
# InstMemory_bb.v
# InstMemory_inst.v
# IR.sv
# KeyFilter.sv
# Launch_ModelSim.bat
# modelsim.ini
# Mux_2_to_1.sv
# Mux_8_to_1.sv
# Mux_8_to_1_wave.do
# output_files
# PC.sv
# Processor.sv
# Processor_wave.do
# Processor2025_TestprocessorKeyConditionerSDC.pdf
# Project.qpf
# Project.qsf
# Project.qsf.bak
# Project.sdc
# Project.sv
# Project.sv.bak
# Project_nativelink_simulation.rpt
# Project_wave.do
# RegisterFile.sv
# rtl_work
# runProcessor.do
# runProject.do
# simulation
# StateDefs.sv
# StateMachine.sv
# StateMachine.sv.bak
# testProcessor.sv
# transcript
# vsim.wlf
cd ..
# reading C:/intelFPGA_lite/20.1/modelsim_ase/win32aloem/../modelsim.ini
ls
# 05-22-2025-notes.txt
# ControlUnit
# DATA_FROM_CHAT.odt
# Datapath
# enum_crash_course.odt
# garbage
# Launch_ModelSim.bat
# Processor
# Processor2025_Datapath.pdf
# Project
# Project_template.docx
# Project_timeline.pdf
# ProjectAssignment_SimpleProcessor.pdf
# README.md
# testProcessor.sv
# transcript
cd ControlUnit
# reading modelsim.ini
ls
# A copy.mif
# A.mif
# A.ver
# ControlUnit.sv
# ControlUnit.sv.bak
# ControlUnit_wave.do
# DROM_tb.sv
# DROM_wave.do
# InstMemory.qip
# InstMemory.v
# InstMemory_bb.v
# InstMemory_inst.v
# IR.sv
# IR.sv.bak
# IR_wave.do
# Launch_ModelSim.bat
# modelsim.ini
# PC.sv
# PC.sv.bak
# PC_IR_ROM.sv
# PC_IR_ROM_wave.do
# PC_wave.do
# Processor2025_ControlUnit.pdf
# rtl_work
# runControlUnit.do
# runIR.do
# runPC.do
# runPC_IR_ROM.do
# runROM.do
# runStateMachine.do
# StateDefs.sv
# StateMachine.sv
# StateMachine.sv.bak
# StateMachine_wave.do
# transcript
# vsim.wlf
do runStateMachine.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:40:59 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 15:40:59 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:40:59 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 15:40:59 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  StateMachine_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug StateMachine_tb 
# Start time: 15:40:59 on Jun 07,2025
# Loading sv_std.std
# Loading work.StateDefs
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine_tb
# Loading work.StateMachine
# ** Warning: (vsim-2685) [TFMPC] - Too few port connections for 'DUT'.  Expected 16, found 15.
#    Time: 0 ps  Iteration: 0  Instance: /StateMachine_tb/DUT File: ./StateMachine.sv Line: 200
# ** Warning: (vsim-3015) [PCDPC] - Port size (1) does not match connection size (16) for port 'ResetN'. The port definition is at: ./StateMachine.sv(30).
#    Time: 0 ps  Iteration: 0  Instance: /StateMachine_tb/DUT File: ./StateMachine.sv Line: 200
# ** Warning: (vsim-3015) [PCDPC] - Port size (16) does not match connection size (1) for port 'IR'. The port definition is at: ./StateMachine.sv(31).
#    Time: 0 ps  Iteration: 0  Instance: /StateMachine_tb/DUT File: ./StateMachine.sv Line: 200
# ** Warning: (vsim-3015) [PCDPC] - Port size (1) does not match connection size (8) for port 'PC_up'. The port definition is at: ./StateMachine.sv(32).
#    Time: 0 ps  Iteration: 0  Instance: /StateMachine_tb/DUT File: ./StateMachine.sv Line: 200
# ** Warning: (vsim-3015) [PCDPC] - Port size (8) does not match connection size (4) for port 'D_addr'. The port definition is at: ./StateMachine.sv(33).
#    Time: 0 ps  Iteration: 0  Instance: /StateMachine_tb/DUT File: ./StateMachine.sv Line: 200
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (3) for port 'RF_Rb_addr'. The port definition is at: ./StateMachine.sv(34).
#    Time: 0 ps  Iteration: 0  Instance: /StateMachine_tb/DUT File: ./StateMachine.sv Line: 200
# ** Error (suppressible): (vsim-3999) Connection type 'enum reg[3:0] StateDefs::State' is incompatible with 'reg[2:0]' for  port (Alu_s0).
#    Time: 0 ps  Iteration: 0  Instance: /StateMachine_tb/DUT File: ./StateMachine.sv Line: 200
# ** Warning: (vsim-3722) ./StateMachine.sv(200): [TFMPC] - Missing connection for port 'NextState'.
# Error loading design
# Error: Error loading design
#        Pausing macro execution
# MACRO ./runStateMachine.do PAUSED at line 23
do runStateMachine.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:42:30 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 15:42:30 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:42:30 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 15:42:30 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  StateMachine_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug StateMachine_tb 
# Start time: 15:40:59 on Jun 07,2025
# Loading sv_std.std
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine_tb
# Loading work.StateMachine
# ** Warning: (vsim-2685) [TFMPC] - Too few port connections for 'DUT'.  Expected 16, found 15.
#    Time: 0 ps  Iteration: 0  Instance: /StateMachine_tb/DUT File: ./StateMachine.sv Line: 264
# ** Warning: (vsim-3015) [PCDPC] - Port size (1) does not match connection size (16) for port 'ResetN'. The port definition is at: ./StateMachine.sv(86).
#    Time: 0 ps  Iteration: 0  Instance: /StateMachine_tb/DUT File: ./StateMachine.sv Line: 264
# ** Warning: (vsim-3015) [PCDPC] - Port size (16) does not match connection size (1) for port 'IR'. The port definition is at: ./StateMachine.sv(87).
#    Time: 0 ps  Iteration: 0  Instance: /StateMachine_tb/DUT File: ./StateMachine.sv Line: 264
# ** Warning: (vsim-3015) [PCDPC] - Port size (1) does not match connection size (8) for port 'PC_up'. The port definition is at: ./StateMachine.sv(88).
#    Time: 0 ps  Iteration: 0  Instance: /StateMachine_tb/DUT File: ./StateMachine.sv Line: 264
# ** Warning: (vsim-3015) [PCDPC] - Port size (8) does not match connection size (4) for port 'D_addr'. The port definition is at: ./StateMachine.sv(89).
#    Time: 0 ps  Iteration: 0  Instance: /StateMachine_tb/DUT File: ./StateMachine.sv Line: 264
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (3) for port 'RF_Rb_addr'. The port definition is at: ./StateMachine.sv(90).
#    Time: 0 ps  Iteration: 0  Instance: /StateMachine_tb/DUT File: ./StateMachine.sv Line: 264
# ** Error (suppressible): (vsim-3999) Connection type 'enum reg[3:0] StateMachine_sv_unit::State' is incompatible with 'reg[2:0]' for  port (Alu_s0).
#    Time: 0 ps  Iteration: 0  Instance: /StateMachine_tb/DUT File: ./StateMachine.sv Line: 264
# ** Warning: (vsim-3722) ./StateMachine.sv(264): [TFMPC] - Missing connection for port 'NextState'.
# Error loading design
# Error: Error loading design
#        Pausing macro execution
# MACRO ./runStateMachine.do PAUSED at line 23
do runStateMachine.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:43:58 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 15:43:58 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:43:58 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 15:43:58 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  StateMachine_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug StateMachine_tb 
# Start time: 15:40:59 on Jun 07,2025
# Loading sv_std.std
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine_tb
# Loading work.StateMachine
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do StateMachine_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /StateMachine_tb/Clk
# add wave -noupdate /StateMachine_tb/IR
# add wave -noupdate /StateMachine_tb/D_wr
# ** UI-Msg: (vish-4014) No objects found matching '/StateMachine_tb/D_wr'.
# Executing ONERROR command at macro ./StateMachine_wave.do line 5
# add wave -noupdate /StateMachine_tb/RF_s
# add wave -noupdate /StateMachine_tb/RF_W_en
# add wave -noupdate /StateMachine_tb/PC_clr
# add wave -noupdate /StateMachine_tb/IR_ld
# add wave -noupdate /StateMachine_tb/PC_up
# add wave -noupdate /StateMachine_tb/D_Addr
# ** UI-Msg: (vish-4014) No objects found matching '/StateMachine_tb/D_Addr'.
# Executing ONERROR command at macro ./StateMachine_wave.do line 11
# add wave -noupdate /StateMachine_tb/RF_W_addr
# add wave -noupdate /StateMachine_tb/RF_Ra_addr
# add wave -noupdate /StateMachine_tb/RF_Rb_addr
# add wave -noupdate /StateMachine_tb/Alu_s0
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 
# Resetting to Init to test Noop.
# CurrentState = Init
# Success! The Expected state was Noop and was Noop!
# Resetting to Init to test Store.
# CurrentState = Init
# Success! The Expected state was Store and was Store!
# Resetting to Init to test Load_A.
# CurrentState = Init
# Success! The Expected state was Load_A and was Load_A!
# Success! The Expected state was Load_B and was Load_B!
# Resetting to Init to test Add.
# CurrentState = Init
# Success! The Expected state was Add and was Add!
# Resetting to Init to test Sub.
# CurrentState = Init
# Success! The Expected state was Sub and was Sub!
# Resetting to Init to test Halt.
# CurrentState = Init
# Success! The Expected state was Halt and was Halt!
# ** Note: $stop    : ./StateMachine.sv(313)
#    Time: 391 ps  Iteration: 0  Instance: /StateMachine_tb
# Break in Module StateMachine_tb at ./StateMachine.sv line 313
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 411 ps
# 
# End
do runStateMachine.do
# turn on verbage
# transcript on
# 
#enable state machine
# vsim -fsmdebug StateMachine_tb
# End time: 15:50:00 on Jun 07,2025, Elapsed time: 0:09:01
# Errors: 2, Warnings: 14
# vsim -fsmdebug StateMachine_tb 
# Start time: 15:50:00 on Jun 07,2025
# Loading sv_std.std
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine_tb
# Loading work.StateMachine
# WARNING: No extended dataflow license exists
# 
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib.qdb".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:50:03 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 15:50:03 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:50:03 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 15:50:03 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  StateMachine_tb
# End time: 15:50:05 on Jun 07,2025, Elapsed time: 0:00:05
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug StateMachine_tb 
# Start time: 15:50:05 on Jun 07,2025
# Loading sv_std.std
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine_tb
# Loading work.StateMachine
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do StateMachine_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /StateMachine_tb/Clk
# add wave -noupdate /StateMachine_tb/ResetN
# add wave -noupdate /StateMachine_tb/IR
# add wave -noupdate /StateMachine_tb/D_wr
# ** UI-Msg: (vish-4014) No objects found matching '/StateMachine_tb/D_wr'.
# Executing ONERROR command at macro ./StateMachine_wave.do line 6
# add wave -noupdate /StateMachine_tb/RF_s
# add wave -noupdate /StateMachine_tb/RF_W_en
# add wave -noupdate /StateMachine_tb/PC_clr
# add wave -noupdate /StateMachine_tb/IR_ld
# add wave -noupdate /StateMachine_tb/PC_up
# add wave -noupdate /StateMachine_tb/D_Addr
# ** UI-Msg: (vish-4014) No objects found matching '/StateMachine_tb/D_Addr'.
# Executing ONERROR command at macro ./StateMachine_wave.do line 12
# add wave -noupdate /StateMachine_tb/RF_W_addr
# add wave -noupdate /StateMachine_tb/RF_Ra_addr
# add wave -noupdate /StateMachine_tb/RF_Rb_addr
# add wave -noupdate /StateMachine_tb/Alu_s0
# add wave -noupdate /StateMachine_tb/CurrentState
# add wave -noupdate /StateMachine_tb/NextState
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 
# Resetting to Init to test Noop.
# CurrentState = Init
# Success! The Expected state was Noop and was Noop!
# Resetting to Init to test Store.
# CurrentState = Init
# Success! The Expected state was Store and was Store!
# Resetting to Init to test Load_A.
# CurrentState = Init
# Success! The Expected state was Load_A and was Load_A!
# Success! The Expected state was Load_B and was Load_B!
# Resetting to Init to test Add.
# CurrentState = Init
# Success! The Expected state was Add and was Add!
# Resetting to Init to test Sub.
# CurrentState = Init
# Success! The Expected state was Sub and was Sub!
# Resetting to Init to test Halt.
# CurrentState = Init
# Success! The Expected state was Halt and was Halt!
# ** Note: $stop    : ./StateMachine.sv(313)
#    Time: 391 ps  Iteration: 0  Instance: /StateMachine_tb
# Break in Module StateMachine_tb at ./StateMachine.sv line 313
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 411 ps
# 
# End
do runStateMachine.do
# turn on verbage
# transcript on
# 
# 
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:00:33 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 16:00:33 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:00:33 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# ** Error: (vlog-13053) ./StateMachine.sv(262): near "'4": Illegal base specifier in numeric constant.
# ** Error: (vlog-13069) ./StateMachine.sv(262): near "'4": syntax error, unexpected BASE, expecting IDENTIFIER or TYPE_IDENTIFIER or NETTYPE_IDENTIFIER or '='.
# ** Error: (vlog-13057) ./StateMachine.sv(262): near "[end of file]": Expecting numeric digits.
# ** Error: (vlog-13057) ./StateMachine.sv(262): near "[end of file]": Expecting numeric digits.
# ** Error: (vlog-13053) ./StateMachine.sv(262): near "'4": Illegal base specifier in numeric constant.
# ** Error: (vlog-13057) ./StateMachine.sv(262): near "[end of file]": Expecting numeric digits.
# ** Error: (vlog-13057) ./StateMachine.sv(262): near "[end of file]": Expecting numeric digits.
# End time: 16:00:33 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 7, Warnings: 0
# ** Error: C:/intelFPGA_lite/20.1/modelsim_ase/win32aloem/vlog failed.
# Error in macro ./runStateMachine.do line 19
# C:/intelFPGA_lite/20.1/modelsim_ase/win32aloem/vlog failed.
#     while executing
# "vlog -work work +acc "./StateMachine.sv""
do runStateMachine.do
# turn on verbage
# transcript on
# 
# 
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:01:21 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 16:01:21 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:01:21 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 16:01:21 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc +cover=fsm ./StateMachine.sv ./StateDefs.sv
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# ** Error: (vlog-2005) Unknown spec character 'm' in +cover option.
# Errors: 1, Warnings: 0
# ** Error: C:/intelFPGA_lite/20.1/modelsim_ase/win32aloem/vlog failed.
# Error in macro ./runStateMachine.do line 20
# C:/intelFPGA_lite/20.1/modelsim_ase/win32aloem/vlog failed.
#     while executing
# "vlog -work work +acc +cover=fsm ./StateMachine.sv ./StateDefs.sv"
do runStateMachine.do
# turn on verbage
# transcript on
# 
# 
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:02:33 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 16:02:33 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:02:33 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 16:02:33 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
#added to try and get fsm viewer working
# vlog -work work +acc ./StateMachine.sv ./StateDefs.sv
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:02:33 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv ./StateDefs.sv 
# -- Compiling package StateMachine_sv_unit
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# -- Compiling package StateDefs
# 
# Top level modules:
# 	StateMachine_tb
# End time: 16:02:33 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -coverage -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  StateMachine_tb
# End time: 16:02:34 on Jun 07,2025, Elapsed time: 0:12:29
# Errors: 2, Warnings: 0
# vsim -t 1ps -coverage -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug StateMachine_tb 
# Start time: 16:02:34 on Jun 07,2025
# Loading sv_std.std
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine_tb
# Loading work.StateMachine
# ** Error: This product is not licensed for Code Coverage.
# Error loading design
# Error: Error loading design
#        Pausing macro execution
# MACRO ./runStateMachine.do PAUSED at line 28
do runStateMachine.do
# turn on verbage
# transcript on
# 
# 
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:03:05 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 16:03:05 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:03:05 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 16:03:05 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
#added to try and get fsm viewer working
# vlog -work work +acc ./StateMachine.sv ./StateDefs.sv
# 
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -coverage -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  StateMachine_tb
# vsim -t 1ps -coverage -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug StateMachine_tb 
# Start time: 16:02:34 on Jun 07,2025
# Loading sv_std.std
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine_tb
# Loading work.StateMachine
# ** Error: This product is not licensed for Code Coverage.
# Error loading design
# Error: Error loading design
#        Pausing macro execution
# MACRO ./runStateMachine.do PAUSED at line 28
do runStateMachine.do
# turn on verbage
# transcript on
# 
# 
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:03:20 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 16:03:20 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:03:20 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 16:03:20 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
#added to try and get fsm viewer working
# vlog -work work +acc ./StateMachine.sv ./StateDefs.sv
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:03:20 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv ./StateDefs.sv 
# -- Compiling package StateMachine_sv_unit
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# -- Compiling package StateDefs
# 
# Top level modules:
# 	StateMachine_tb
# End time: 16:03:20 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  StateMachine_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug StateMachine_tb 
# Start time: 16:02:34 on Jun 07,2025
# Loading sv_std.std
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine_tb
# Loading work.StateMachine
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do StateMachine_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /StateMachine_tb/Clk
# add wave -noupdate /StateMachine_tb/ResetN
# add wave -noupdate /StateMachine_tb/IR
# add wave -noupdate /StateMachine_tb/D_wr
# ** UI-Msg: (vish-4014) No objects found matching '/StateMachine_tb/D_wr'.
# Executing ONERROR command at macro ./StateMachine_wave.do line 6
# add wave -noupdate /StateMachine_tb/RF_s
# add wave -noupdate /StateMachine_tb/RF_W_en
# add wave -noupdate /StateMachine_tb/PC_clr
# add wave -noupdate /StateMachine_tb/IR_ld
# add wave -noupdate /StateMachine_tb/PC_up
# add wave -noupdate /StateMachine_tb/D_Addr
# ** UI-Msg: (vish-4014) No objects found matching '/StateMachine_tb/D_Addr'.
# Executing ONERROR command at macro ./StateMachine_wave.do line 12
# add wave -noupdate /StateMachine_tb/RF_W_addr
# add wave -noupdate /StateMachine_tb/RF_Ra_addr
# add wave -noupdate /StateMachine_tb/RF_Rb_addr
# add wave -noupdate /StateMachine_tb/Alu_s0
# add wave -noupdate /StateMachine_tb/CurrentState
# add wave -noupdate /StateMachine_tb/NextState
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# GetModuleFileName: The specified module could not be found.
# 
# 
# 
# Resetting to Init to test Noop.
# CurrentState = Init
# Success! The Expected state was Noop and was Noop!
# Resetting to Init to test Store.
# CurrentState = Init
# Success! The Expected state was Store and was Store!
# Resetting to Init to test Load_A.
# CurrentState = Init
# Success! The Expected state was Load_A and was Load_A!
# Success! The Expected state was Load_B and was Load_B!
# Resetting to Init to test Add.
# CurrentState = Init
# Success! The Expected state was Add and was Add!
# Resetting to Init to test Sub.
# CurrentState = Init
# Success! The Expected state was Sub and was Sub!
# Resetting to Init to test Halt.
# CurrentState = Init
# Success! The Expected state was Halt and was Halt!
# ** Note: $stop    : ./StateMachine.sv(313)
#    Time: 391 ps  Iteration: 0  Instance: /StateMachine_tb
# Break in Module StateMachine_tb at ./StateMachine.sv line 313
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 411 ps
# 
# End
do runStateMachine.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:06:06 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 16:06:06 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:06:06 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 16:06:06 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  StateMachine_tb
# End time: 16:06:08 on Jun 07,2025, Elapsed time: 0:03:34
# Errors: 2, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug StateMachine_tb 
# Start time: 16:06:08 on Jun 07,2025
# Loading sv_std.std
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine_tb
# Loading work.StateMachine
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do StateMachine_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /StateMachine_tb/Clk
# add wave -noupdate /StateMachine_tb/ResetN
# add wave -noupdate /StateMachine_tb/IR
# add wave -noupdate /StateMachine_tb/D_wr
# ** UI-Msg: (vish-4014) No objects found matching '/StateMachine_tb/D_wr'.
# Executing ONERROR command at macro ./StateMachine_wave.do line 6
# add wave -noupdate /StateMachine_tb/RF_s
# add wave -noupdate /StateMachine_tb/RF_W_en
# add wave -noupdate /StateMachine_tb/PC_clr
# add wave -noupdate /StateMachine_tb/IR_ld
# add wave -noupdate /StateMachine_tb/PC_up
# add wave -noupdate /StateMachine_tb/D_Addr
# ** UI-Msg: (vish-4014) No objects found matching '/StateMachine_tb/D_Addr'.
# Executing ONERROR command at macro ./StateMachine_wave.do line 12
# add wave -noupdate /StateMachine_tb/RF_W_addr
# add wave -noupdate /StateMachine_tb/RF_Ra_addr
# add wave -noupdate /StateMachine_tb/RF_Rb_addr
# add wave -noupdate /StateMachine_tb/Alu_s0
# add wave -noupdate /StateMachine_tb/CurrentState
# add wave -noupdate /StateMachine_tb/NextState
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 
# Resetting to Init to test Noop.
# CurrentState = Init
# Success! The Expected state was Noop and was Noop!
# Resetting to Init to test Store.
# CurrentState = Init
# Success! The Expected state was Store and was Store!
# Resetting to Init to test Load_A.
# CurrentState = Init
# Success! The Expected state was Load_A and was Load_A!
# Success! The Expected state was Load_B and was Load_B!
# Resetting to Init to test Add.
# CurrentState = Init
# Success! The Expected state was Add and was Add!
# Resetting to Init to test Sub.
# CurrentState = Init
# Success! The Expected state was Sub and was Sub!
# Resetting to Init to test Halt.
# CurrentState = Init
# Success! The Expected state was Halt and was Halt!
# ** Note: $stop    : ./StateMachine.sv(313)
#    Time: 391 ps  Iteration: 0  Instance: /StateMachine_tb
# Break in Module StateMachine_tb at ./StateMachine.sv line 313
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 411 ps
# 
# End
do runStateMachine.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:10:35 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 16:10:35 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:10:35 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 16:10:35 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  StateMachine_tb
# End time: 16:10:39 on Jun 07,2025, Elapsed time: 0:04:31
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug StateMachine_tb 
# Start time: 16:10:39 on Jun 07,2025
# Loading sv_std.std
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine_tb
# Loading work.StateMachine
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do StateMachine_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /StateMachine_tb/Clk
# add wave -noupdate /StateMachine_tb/ResetN
# add wave -noupdate /StateMachine_tb/IR
# add wave -noupdate /StateMachine_tb/D_wr
# ** UI-Msg: (vish-4014) No objects found matching '/StateMachine_tb/D_wr'.
# Executing ONERROR command at macro ./StateMachine_wave.do line 6
# add wave -noupdate /StateMachine_tb/RF_s
# add wave -noupdate /StateMachine_tb/RF_W_en
# add wave -noupdate /StateMachine_tb/PC_clr
# add wave -noupdate /StateMachine_tb/IR_ld
# add wave -noupdate /StateMachine_tb/PC_up
# add wave -noupdate /StateMachine_tb/D_Addr
# ** UI-Msg: (vish-4014) No objects found matching '/StateMachine_tb/D_Addr'.
# Executing ONERROR command at macro ./StateMachine_wave.do line 12
# add wave -noupdate /StateMachine_tb/RF_W_addr
# add wave -noupdate /StateMachine_tb/RF_Ra_addr
# add wave -noupdate /StateMachine_tb/RF_Rb_addr
# add wave -noupdate /StateMachine_tb/Alu_s0
# add wave -noupdate /StateMachine_tb/CurrentState
# add wave -noupdate /StateMachine_tb/NextState
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 
# Resetting to Init to test Noop.
# CurrentState = Init
# Success! The Expected state was Noop and was Noop!
# Resetting to Init to test Store.
# CurrentState = Init
# Success! The Expected state was Store and was Store!
# Resetting to Init to test Load_A.
# CurrentState = Init
# Success! The Expected state was Load_A and was Load_A!
# Success! The Expected state was Load_B and was Load_B!
# Resetting to Init to test Add.
# CurrentState = Init
# Success! The Expected state was Add and was Add!
# Resetting to Init to test Sub.
# CurrentState = Init
# Success! The Expected state was Sub and was Sub!
# Resetting to Init to test Halt.
# CurrentState = Init
# Success! The Expected state was Halt and was Halt!
# ** Note: $stop    : ./StateMachine.sv(320)
#    Time: 411 ps  Iteration: 0  Instance: /StateMachine_tb
# Break in Module StateMachine_tb at ./StateMachine.sv line 320
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 432 ps
# 
# End
do runStateMachine.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc +cover "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:18:04 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" "+cover" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 16:18:04 on Jun 07,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc +cover "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 16:18:04 on Jun 07,2025
# vlog -reportprogress 300 -work work "+acc" "+cover" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Compiling module StateMachine
# ** Note: (vlog-143) Recognized 1 FSM in module "StateMachine(verilog)".
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 16:18:05 on Jun 07,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  StateMachine_tb
# End time: 16:18:06 on Jun 07,2025, Elapsed time: 0:07:27
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug StateMachine_tb 
# Start time: 16:18:06 on Jun 07,2025
# Loading sv_std.std
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine_tb
# Loading work.StateMachine
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do StateMachine_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /StateMachine_tb/Clk
# add wave -noupdate /StateMachine_tb/ResetN
# add wave -noupdate /StateMachine_tb/IR
# add wave -noupdate /StateMachine_tb/D_wr
# ** UI-Msg: (vish-4014) No objects found matching '/StateMachine_tb/D_wr'.
# Executing ONERROR command at macro ./StateMachine_wave.do line 6
# add wave -noupdate /StateMachine_tb/RF_s
# add wave -noupdate /StateMachine_tb/RF_W_en
# add wave -noupdate /StateMachine_tb/PC_clr
# add wave -noupdate /StateMachine_tb/IR_ld
# add wave -noupdate /StateMachine_tb/PC_up
# add wave -noupdate /StateMachine_tb/D_Addr
# ** UI-Msg: (vish-4014) No objects found matching '/StateMachine_tb/D_Addr'.
# Executing ONERROR command at macro ./StateMachine_wave.do line 12
# add wave -noupdate /StateMachine_tb/RF_W_addr
# add wave -noupdate /StateMachine_tb/RF_Ra_addr
# add wave -noupdate /StateMachine_tb/RF_Rb_addr
# add wave -noupdate /StateMachine_tb/Alu_s0
# add wave -noupdate /StateMachine_tb/CurrentState
# add wave -noupdate /StateMachine_tb/NextState
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 
# Resetting to Init to test Noop.
# CurrentState = Init
# Success! The Expected state was Noop and was Noop!
# Resetting to Init to test Store.
# CurrentState = Init
# Success! The Expected state was Store and was Store!
# Resetting to Init to test Load_A.
# CurrentState = Init
# Success! The Expected state was Load_A and was Load_A!
# Success! The Expected state was Load_B and was Load_B!
# Resetting to Init to test Add.
# CurrentState = Init
# Success! The Expected state was Add and was Add!
# Resetting to Init to test Sub.
# CurrentState = Init
# Success! The Expected state was Sub and was Sub!
# Resetting to Init to test Halt.
# CurrentState = Init
# Success! The Expected state was Halt and was Halt!
# ** Note: $stop    : ./StateMachine.sv(320)
#    Time: 411 ps  Iteration: 0  Instance: /StateMachine_tb
# Break in Module StateMachine_tb at ./StateMachine.sv line 320
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 432 ps
# 
# End
step -out -current
# ** UI-Msg: (vsim-12048) Current thread #INITIAL#280(#ublk#107928466#280) is Done.
# 
step -out -current
# Break key hit
# Break in Module StateMachine at ./StateMachine.sv line 220
# End time: 16:24:49 on Jun 07,2025, Elapsed time: 0:06:43
# Errors: 0, Warnings: 0
