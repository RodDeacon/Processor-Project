# Reading pref.tcl
do runIR.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:08:53 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:08:54 on Jun 01,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  IR_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug IR_tb 
# Start time: 14:08:54 on Jun 01,2025
# Loading sv_std.std
# Loading work.IR_tb
# Loading work.IR
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do IR_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /IR_tb/Clk
# add wave -noupdate /IR_tb/ld
# add wave -noupdate /IR_tb/inst_in
# add wave -noupdate /IR_tb/inst_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 
# Success!!! The output should be 420, actual:   420
# Success!!! The output should be 420, actual:   420
# ** Note: $stop    : ./IR.sv(65)
#    Time: 111 ps  Iteration: 0  Instance: /IR_tb
# Break in Module IR_tb at ./IR.sv line 65
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 117 ps
# 
# End
do runIR.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib.qdb".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:11:04 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:11:04 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  IR_tb
# End time: 14:11:06 on Jun 01,2025, Elapsed time: 0:02:12
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug IR_tb 
# Start time: 14:11:06 on Jun 01,2025
# Loading sv_std.std
# Loading work.IR_tb
# Loading work.IR
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do IR_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /IR_tb/Clk
# add wave -noupdate /IR_tb/ld
# add wave -noupdate /IR_tb/inst_in
# add wave -noupdate /IR_tb/inst_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 ld = 1, inst_in =   420, inst_out =     x
# 10 ld = 1, inst_in =   420, inst_out =   420
# ** Error: Expecting 444, actual:   420
#    Time: 11 ps  Scope: IR_tb File: ./IR.sv Line: 56
# 21 ld = 0, inst_in =   420, inst_out =   420
# ** Error: Expecting 444, actual:   420
#    Time: 111 ps  Scope: IR_tb File: ./IR.sv Line: 63
# ** Note: $stop    : ./IR.sv(66)
#    Time: 111 ps  Iteration: 0  Instance: /IR_tb
# Break in Module IR_tb at ./IR.sv line 66
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 117 ps
# 
# End
do runIR.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:11:31 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:11:31 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  IR_tb
# End time: 14:11:32 on Jun 01,2025, Elapsed time: 0:00:26
# Errors: 2, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug IR_tb 
# Start time: 14:11:32 on Jun 01,2025
# Loading sv_std.std
# Loading work.IR_tb
# Loading work.IR
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do IR_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /IR_tb/Clk
# add wave -noupdate /IR_tb/ld
# add wave -noupdate /IR_tb/inst_in
# add wave -noupdate /IR_tb/inst_out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 ld = 1, inst_in =   444, inst_out =     x
# 10 ld = 1, inst_in =   444, inst_out =   444
# Success!!! The output should be 444, actual:   444
# 21 ld = 0, inst_in =   444, inst_out =   444
# Success!!! The output should be 444, actual:   444
# ** Note: $stop    : ./IR.sv(66)
#    Time: 111 ps  Iteration: 0  Instance: /IR_tb
# Break in Module IR_tb at ./IR.sv line 66
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 117 ps
# 
# End
ls
# A.mif                PC_IR_ROM.sv                   
# A.ver                PC_wave.do                     
# ControlUnit.sv       Processor2025_ControlUnit.pdf  
# DROM_tb.sv           StateDefs.sv                   
# DROM_wave.do         StateMachine.sv                
# IR.sv                StateMachine.sv.bak            
# IR.sv.bak            StateMachine_wave.do           
# IR_wave.do           modelsim.ini                   
# InstMemory.qip       rtl_work                       
# InstMemory.v         runIR.do                       
# InstMemory_bb.v      runPC.do                       
# InstMemory_inst.v    runROM.do                      
# Launch_ModelSim.bat  runStateMachine.do             
# PC.sv                transcript                     
# PC.sv.bak            vsim.wlf                       
do runPC_IR_ROM.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:44:29 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 14:44:29 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:44:29 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 14:44:29 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:44:29 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:44:29 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:44:29 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# ** Warning: ./PC_IR_ROM.sv(66): (vlog-2643) Unterminated string literal continues onto next line.
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 14:44:29 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 1
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 14:44:31 on Jun 01,2025, Elapsed time: 0:32:59
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 14:44:31 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# ** Error (suppressible): (vsim-3009) [TSCALE] - Module 'PC_IR_ROM_tb' does not have a timeunit/timeprecision specification in effect, but other modules do.
#    Time: 0 ps  Iteration: 0  Instance: /PC_IR_ROM_tb/DUT/unit_ROM File: ./InstMemory.v
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Error loading design
# Error: Error loading design
#        Pausing macro execution
# MACRO ./runPC_IR_ROM.do PAUSED at line 24
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:45:13 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 14:45:13 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:45:13 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 14:45:13 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:45:13 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:45:13 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:45:14 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# ** Warning: ./PC_IR_ROM.sv(68): (vlog-2643) Unterminated string literal continues onto next line.
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 14:45:14 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 1
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 14:44:31 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = x, IR_ld = x,
# 
#             inst_out =     x 
# 11 PC_Clr = 1, PC_Up = 1, IR_ld = 1,
# 
#             inst_out =     x 
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 21 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:46:19 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 14:46:19 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:46:19 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 14:46:19 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:46:19 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:46:20 on Jun 01,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:46:20 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# ** Warning: ./PC_IR_ROM.sv(69): (vlog-2643) Unterminated string literal continues onto next line.
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 14:46:20 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 1
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 14:46:21 on Jun 01,2025, Elapsed time: 0:01:50
# Errors: 1, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 14:46:21 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = x, IR_ld = x,
# 
#             inst_out =     x 
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 21 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:47:12 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 14:47:12 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:47:12 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 14:47:12 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:47:12 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:47:12 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:47:12 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# ** Warning: ./PC_IR_ROM.sv(68): (vlog-2643) Unterminated string literal continues onto next line.
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 14:47:12 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 1
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 14:47:13 on Jun 01,2025, Elapsed time: 0:00:52
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 14:47:13 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = x, IR_ld = x,
# 
#             inst_out =     x 
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 21 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:47:40 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 14:47:40 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:47:40 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 14:47:40 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:47:40 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:47:40 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:47:40 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# ** Warning: ./PC_IR_ROM.sv(68): (vlog-2643) Unterminated string literal continues onto next line.
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 14:47:40 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 1
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 14:47:41 on Jun 01,2025, Elapsed time: 0:00:28
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 14:47:41 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = x, IR_ld = x,
# 
#             inst_out =     x 
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 21 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:48:05 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 14:48:05 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:48:05 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 14:48:05 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:48:05 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:48:05 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:48:05 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# ** Warning: ./PC_IR_ROM.sv(69): (vlog-2643) Unterminated string literal continues onto next line.
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 14:48:05 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 1
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 14:48:06 on Jun 01,2025, Elapsed time: 0:00:25
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 14:48:06 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1,
# 
#             inst_out =     x 
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 21 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:01 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 14:49:01 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:01 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 14:49:01 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:01 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:49:01 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:49:01 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# ** Warning: ./PC_IR_ROM.sv(68): (vlog-2643) Unterminated string literal continues onto next line.
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 14:49:01 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 1
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 14:49:02 on Jun 01,2025, Elapsed time: 0:00:56
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 14:49:02 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = x, IR_ld = x,
# 
#             inst_out =     x 
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 21 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:51:45 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 14:51:45 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:51:45 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 14:51:45 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:51:45 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:51:45 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:51:45 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# ** Warning: ./PC_IR_ROM.sv(68): (vlog-2643) Unterminated string literal continues onto next line.
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 14:51:45 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 1
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 14:51:46 on Jun 01,2025, Elapsed time: 0:02:44
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 14:51:46 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1,
# 
#             inst_out =     x 
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 21 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:16 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 14:52:16 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:16 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 14:52:16 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:16 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:52:16 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:17 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# ** Warning: ./PC_IR_ROM.sv(68): (vlog-2643) Unterminated string literal continues onto next line.
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 14:52:17 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 1
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 14:52:18 on Jun 01,2025, Elapsed time: 0:00:32
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 14:52:18 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1,
# 
#             inst_out =     x 
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 21 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:50 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 14:52:50 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:50 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 14:52:50 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:50 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:52:50 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:52:50 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# ** Warning: ./PC_IR_ROM.sv(71): (vlog-2643) Unterminated string literal continues onto next line.
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 14:52:50 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 1
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 14:52:51 on Jun 01,2025, Elapsed time: 0:00:33
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 14:52:51 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1,
# 
#             inst_out =     x 
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 21 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib.qdb".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:06 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 14:54:06 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:06 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 14:54:06 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:06 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:54:06 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:06 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 14:54:06 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 14:54:07 on Jun 01,2025, Elapsed time: 0:01:16
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 14:54:07 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 21 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:39 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 14:54:39 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:39 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 14:54:39 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:39 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:54:39 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:54:39 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 14:54:39 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 14:54:41 on Jun 01,2025, Elapsed time: 0:00:34
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 14:54:41 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 21 ps
# 
# End
ls
# A.mif                PC_IR_ROM_wave.do              
# A.ver                PC_wave.do                     
# ControlUnit.sv       Processor2025_ControlUnit.pdf  
# DROM_tb.sv           StateDefs.sv                   
# DROM_wave.do         StateMachine.sv                
# IR.sv                StateMachine.sv.bak            
# IR.sv.bak            StateMachine_wave.do           
# IR_wave.do           modelsim.ini                   
# InstMemory.qip       rtl_work                       
# InstMemory.v         runIR.do                       
# InstMemory_bb.v      runPC.do                       
# InstMemory_inst.v    runPC_IR_ROM.do                
# Launch_ModelSim.bat  runROM.do                      
# PC.sv                runStateMachine.do             
# PC.sv.bak            transcript                     
# PC_IR_ROM.sv         vsim.wlf                       
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:55:34 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 14:55:34 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:55:34 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 14:55:34 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:55:34 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:55:34 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:55:34 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 14:55:34 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 14:55:36 on Jun 01,2025, Elapsed time: 0:00:55
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 14:55:36 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 21 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:55:56 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 14:55:56 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:55:56 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 14:55:56 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:55:56 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:55:56 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:55:56 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 14:55:56 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 14:55:58 on Jun 01,2025, Elapsed time: 0:00:22
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 14:55:58 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# done
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 21 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:56:28 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 14:56:28 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:56:28 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 14:56:28 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:56:28 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:56:28 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:56:28 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 14:56:28 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 14:56:30 on Jun 01,2025, Elapsed time: 0:00:32
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 14:56:30 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# done
# Success!!! Expected 0, actual:     0
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 21 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:58:08 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 14:58:08 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:58:08 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 14:58:08 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:58:08 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:58:08 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:58:08 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# ** Error: (vlog-13069) ./PC_IR_ROM.sv(64): near "5": syntax error, unexpected INTEGER NUMBER, expecting '('.
# End time: 14:58:08 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 1, Warnings: 0
# ** Error: C:/intelFPGA_lite/20.1/modelsim_ase/win32aloem/vlog failed.
# Error in macro ./runPC_IR_ROM.do line 19
# C:/intelFPGA_lite/20.1/modelsim_ase/win32aloem/vlog failed.
#     while executing
# "vlog -work work +acc "./PC_IR_ROM.sv""
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:58:23 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 14:58:23 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:58:23 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 14:58:23 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:58:23 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:58:23 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:58:23 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 14:58:23 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 14:58:25 on Jun 01,2025, Elapsed time: 0:01:55
# Errors: 1, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 14:58:25 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# done
# Success!!! Expected 0, actual:     0
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 21 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:58:44 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 14:58:44 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:58:44 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 14:58:44 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:58:44 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 14:58:44 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 14:58:44 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 14:58:44 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 14:58:45 on Jun 01,2025, Elapsed time: 0:00:20
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 14:58:46 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# done
# Success!!! Expected 0, actual:     0
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 21 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:00:07 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:00:07 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:00:07 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:00:07 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:00:07 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:00:07 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:00:07 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:00:07 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:00:09 on Jun 01,2025, Elapsed time: 0:01:23
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:00:09 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# done
# Success!!! Expected 0, actual:     0
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 21 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:00:35 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:00:35 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:00:35 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:00:35 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:00:35 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:00:35 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:00:35 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:00:35 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:00:36 on Jun 01,2025, Elapsed time: 0:00:27
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:00:36 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# done
# Success!!! Expected 0, actual:     0
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 21 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:01:42 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:01:42 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:01:42 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:01:42 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:01:42 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:01:42 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:01:42 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:01:42 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:01:43 on Jun 01,2025, Elapsed time: 0:01:07
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:01:43 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# done
# Success!!! Expected 0, actual:     0
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 21 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:02:25 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:02:25 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:02:25 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:02:25 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:02:25 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:02:25 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:02:25 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:02:25 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:02:27 on Jun 01,2025, Elapsed time: 0:00:44
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:02:27 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# done
# Success!!! Expected 0, actual:     0
# screech
# screech
# screech
# screech
# screech
# done
# ** Note: $stop    : ./PC_IR_ROM.sv(72)
#    Time: 111 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 72
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 117 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/ControlUnit/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:02:58 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:02:58 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:02:58 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:02:58 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:02:58 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:02:59 on Jun 01,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:02:59 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:02:59 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:03:01 on Jun 01,2025, Elapsed time: 0:00:34
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:03:01 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# done
# Success!!! Expected 0, actual:     0
# done
# ** Note: $stop    : ./PC_IR_ROM.sv(70)
#    Time: 111 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 70
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 117 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:15 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:04:15 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:15 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:04:15 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:15 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:04:15 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:16 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:04:16 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:04:18 on Jun 01,2025, Elapsed time: 0:01:17
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:04:18 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# Success!!! Expected 0, actual:     0
# ** Error: Error!
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 64
# ** Note: $stop    : ./PC_IR_ROM.sv(66)
#    Time: 111 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 66
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 117 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:47 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:04:47 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:47 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:04:47 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:47 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:04:47 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:04:47 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:04:47 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:04:49 on Jun 01,2025, Elapsed time: 0:00:31
# Errors: 1, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:04:49 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# Success!!! Expected 0, actual:     0
# ** Error: Error! The value is:   0
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 64
# ** Note: $stop    : ./PC_IR_ROM.sv(66)
#    Time: 111 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 66
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 117 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:05:32 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:05:32 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:05:32 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:05:32 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:05:32 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:05:32 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:05:32 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:05:32 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:05:34 on Jun 01,2025, Elapsed time: 0:00:45
# Errors: 1, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:05:34 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# Success!!! Expected 0, actual:     0
# Success.   5
# ** Note: $stop    : ./PC_IR_ROM.sv(69)
#    Time: 111 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 69
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 117 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:12:13 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:12:14 on Jun 01,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:12:14 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:12:14 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:12:14 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:12:14 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:12:14 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:12:14 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:12:16 on Jun 01,2025, Elapsed time: 0:06:42
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:12:16 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: A.mif, line 26, Invalid Altera-mif record.
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# Success!!! Expected 0, actual:     0
# Success.   5
# Success.   7
# ** Error: inst_out should be 2, inst _out =     0
#    Time: 151 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 79
# ** Note: $stop    : ./PC_IR_ROM.sv(82)
#    Time: 151 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 82
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 159 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:36 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:13:36 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:36 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:13:36 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:36 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:13:36 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:13:36 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:13:37 on Jun 01,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:13:38 on Jun 01,2025, Elapsed time: 0:01:22
# Errors: 1, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:13:39 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: A.mif, line 26, Invalid Altera-mif record.
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# Success!!! Expected 0, actual:     0
# Success.   5
# Success.   7
# ** Error: inst_out should be 2, inst _out =     0
#    Time: 151 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 79
# ** Note: $stop    : ./PC_IR_ROM.sv(82)
#    Time: 151 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 82
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 159 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:13 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:14:13 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:13 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:14:13 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:13 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:14:13 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:13 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:14:13 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:14:15 on Jun 01,2025, Elapsed time: 0:00:36
# Errors: 1, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:14:15 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: A.mif, line 26, Invalid Altera-mif record.
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# Success!!! Expected 0, actual:     0
# Success.   5
# Success.   7
# ** Error: inst_out should be 2, inst _out =     0
#    Time: 151 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 79
# ** Note: $stop    : ./PC_IR_ROM.sv(82)
#    Time: 151 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 82
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 159 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:56 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:14:56 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:56 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:14:56 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:56 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:14:56 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:14:56 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:14:56 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:14:58 on Jun 01,2025, Elapsed time: 0:00:43
# Errors: 1, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:14:58 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: A.mif, line 26, Invalid Altera-mif record.
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# Success!!! Expected 0, actual:     0
# Success.   5
# Success.   7
# ** Error: inst_out should be 2, inst _out =     0
#    Time: 151 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 79
# ** Note: $stop    : ./PC_IR_ROM.sv(82)
#    Time: 151 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 82
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 159 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:03 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:18:04 on Jun 01,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:04 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:18:04 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:04 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:18:04 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:04 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:18:04 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:18:06 on Jun 01,2025, Elapsed time: 0:03:08
# Errors: 1, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:18:06 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: A.mif, line 26, Invalid Altera-mif record.
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: Oh no, it failed! Expected 0, actual:     1
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 65
# Success.   5
# Success.   7
# ** Error: inst_out should be 2, inst _out =     1
#    Time: 151 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 79
# ** Note: $stop    : ./PC_IR_ROM.sv(82)
#    Time: 151 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 82
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 159 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:47 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:18:47 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:47 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:18:47 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:47 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:18:47 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:18:47 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:18:47 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:18:49 on Jun 01,2025, Elapsed time: 0:00:43
# Errors: 2, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:18:49 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: A.mif, line 26, Invalid Altera-mif record.
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: Oh no, it failed! Expected 0, actual:     1
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 65
# Success.   5
# ** Error: Error! The mem_adress is:   8
#    Time: 171 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 75
# ** Error: inst_out should be 2, inst _out =     0
#    Time: 171 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 79
# ** Note: $stop    : ./PC_IR_ROM.sv(82)
#    Time: 171 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 82
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 180 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:20:01 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:20:01 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:20:01 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:20:01 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:20:01 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:20:01 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:20:01 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:20:01 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:20:03 on Jun 01,2025, Elapsed time: 0:01:14
# Errors: 3, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:20:03 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: A.mif, line 26, Invalid Altera-mif record.
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: Oh no, it failed! Expected 0, actual:     1
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 65
# Success.   5
# ** Error: Error! The mem_adress is:   8
#    Time: 171 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 75
# ** Error: inst_out should be 2, inst _out =     1
#    Time: 171 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 79
# ** Note: $stop    : ./PC_IR_ROM.sv(82)
#    Time: 171 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 82
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 180 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:20:32 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:20:32 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:20:32 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:20:32 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:20:32 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:20:32 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:20:32 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:20:32 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:20:35 on Jun 01,2025, Elapsed time: 0:00:32
# Errors: 3, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:20:35 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: A.mif, line 26, Invalid Altera-mif record.
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: Oh no, it failed! Expected 0, actual:     1
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 65
# Success.   5
# ** Error: Error! The mem_adress is:  15
#    Time: 311 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 75
# ** Error: inst_out should be 2, inst _out =     0
#    Time: 311 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 79
# ** Note: $stop    : ./PC_IR_ROM.sv(82)
#    Time: 311 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 82
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 327 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:22:34 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:22:34 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:22:34 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:22:34 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:22:34 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:22:34 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:22:34 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:22:34 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:22:41 on Jun 01,2025, Elapsed time: 0:02:06
# Errors: 3, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:22:41 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: A.mif, line 26, Invalid Altera-mif record.
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: at testing IR Expected 0, actual:     1
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 65
# Success.   5
# ** Error: Error! The mem_adress is:  15
#    Time: 311 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 75
# ** Error: inst_out should be 2, inst _out =     0
#    Time: 311 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 79
# ** Note: $stop    : ./PC_IR_ROM.sv(82)
#    Time: 311 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 82
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 327 ps
# 
# End
# A time value could not be extracted from the current line
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:23:01 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:23:01 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:23:01 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:23:02 on Jun 01,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:23:02 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:23:02 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:23:02 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:23:02 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:23:04 on Jun 01,2025, Elapsed time: 0:00:23
# Errors: 3, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:23:04 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: A.mif, line 26, Invalid Altera-mif record.
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: at testing IR Expected 0, actual:     1
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 65
# Success.   5
# ** Error: Error! The mem_adress is:   8
#    Time: 171 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 75
# ** Error: inst_out should be 2, inst _out =     1
#    Time: 171 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 79
# ** Note: $stop    : ./PC_IR_ROM.sv(82)
#    Time: 171 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 82
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 180 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:23:16 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:23:16 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:23:16 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:23:16 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:23:16 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:23:16 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:23:16 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:23:16 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:23:19 on Jun 01,2025, Elapsed time: 0:00:15
# Errors: 3, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:23:19 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: A.mif, line 26, Invalid Altera-mif record.
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: at testing IR Expected 0, actual:     1
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 65
# Success.   5
# Success.   7
# ** Error: inst_out should be 2, inst _out =     1
#    Time: 151 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 79
# ** Note: $stop    : ./PC_IR_ROM.sv(82)
#    Time: 151 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 82
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 159 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:23:46 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:23:46 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:23:46 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:23:46 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:23:46 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:23:46 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:23:46 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:23:46 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:23:48 on Jun 01,2025, Elapsed time: 0:00:29
# Errors: 2, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:23:48 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: A.mif, line 26, Invalid Altera-mif record.
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: at testing IR Expected 0, actual:     1
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 65
# Success.   5
# Success.   7
# ** Error: inst_out should be 2, inst _out = 0001
#    Time: 151 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 79
# ** Note: $stop    : ./PC_IR_ROM.sv(82)
#    Time: 151 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 82
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 159 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:24:06 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:24:07 on Jun 01,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:24:07 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:24:07 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:24:07 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:24:07 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:24:07 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:24:07 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:24:09 on Jun 01,2025, Elapsed time: 0:00:21
# Errors: 2, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:24:09 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: A.mif, line 26, Invalid Altera-mif record.
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: at testing IR Expected 0, actual:     1
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 65
# Success.   5
# ** Error: Error! The mem_adress is:   8
#    Time: 171 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 75
# ** Error: inst_out should be 2, inst _out = 0001
#    Time: 171 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 79
# ** Note: $stop    : ./PC_IR_ROM.sv(82)
#    Time: 171 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 82
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 180 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:24:24 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:24:24 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:24:24 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:24:24 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:24:24 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:24:24 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:24:25 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:24:25 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:24:27 on Jun 01,2025, Elapsed time: 0:00:18
# Errors: 3, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:24:27 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: A.mif, line 26, Invalid Altera-mif record.
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: at testing IR Expected 0, actual:     1
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 65
# Success.   5
# ** Error: Error! The mem_adress is:  15
#    Time: 311 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 75
# ** Error: inst_out should be 2, inst _out = 0000
#    Time: 311 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 79
# ** Note: $stop    : ./PC_IR_ROM.sv(82)
#    Time: 311 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 82
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 327 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:27:12 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:27:12 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:27:12 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:27:12 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:27:12 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:27:12 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:27:12 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:27:12 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:27:14 on Jun 01,2025, Elapsed time: 0:02:47
# Errors: 3, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:27:14 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: A.mif, line 26, Invalid Altera-mif record.
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: PC mem_addr expected 0 but is   1
#    Time: 32 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 62
# ** Error: inst_out expected 1 but is     x
#    Time: 32 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 64
# ** Error: PC mem_addr expected 7 but is   8
#    Time: 172 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 71
# ** Error: inst_out expected 2 but is     1
#    Time: 172 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 73
# ** Error: PC mem_addr expected 12 but is  13
#    Time: 272 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 80
# ** Error: inst_out expected 3 but is     0
#    Time: 272 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 82
# All tests passed!
# ** Note: $stop    : ./PC_IR_ROM.sv(85)
#    Time: 272 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 85
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 286 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:17 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:28:17 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:17 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:28:17 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:17 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:28:17 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:28:17 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:28:17 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:28:19 on Jun 01,2025, Elapsed time: 0:01:05
# Errors: 6, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:28:19 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: PC mem_addr expected 0 but is   1
#    Time: 32 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 62
# ** Error: inst_out expected 1 but is     x
#    Time: 32 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 64
# ** Error: PC mem_addr expected 7 but is   8
#    Time: 172 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 71
# ** Error: inst_out expected 2 but is     1
#    Time: 172 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 73
# ** Error: PC mem_addr expected 12 but is  13
#    Time: 272 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 80
# ** Error: inst_out expected 3 but is    17
#    Time: 272 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 82
# All tests passed!
# ** Note: $stop    : ./PC_IR_ROM.sv(85)
#    Time: 272 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 85
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 286 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:30:15 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:30:15 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:30:15 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:30:15 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:30:15 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:30:15 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:30:15 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:30:15 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:30:16 on Jun 01,2025, Elapsed time: 0:01:57
# Errors: 6, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:30:16 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: PC mem_addr expected 0 but is   1
#    Time: 32 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 62
# ** Error: inst_out expected 1 but is     x
#    Time: 32 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 64
# ** Error: PC mem_addr expected 7 but is   8
#    Time: 172 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 71
# ** Error: inst_out expected 2 but is     1
#    Time: 172 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 73
# ** Error: PC mem_addr expected 12 but is  13
#    Time: 272 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 80
# ** Error: inst_out expected 3 but is    17
#    Time: 272 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 82
# All tests passed!
# ** Note: $stop    : ./PC_IR_ROM.sv(85)
#    Time: 272 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 85
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 286 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:31:04 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:31:04 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:31:04 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:31:04 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:31:04 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:31:04 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:31:04 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:31:04 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:31:06 on Jun 01,2025, Elapsed time: 0:00:50
# Errors: 6, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:31:06 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: at testing IR Expected 0, actual:     1
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 64
# Success.   5
# ** Error: Error! The mem_adress is:  15
#    Time: 311 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 74
# ** Error: inst_out should be 2, inst _out = 0011
#    Time: 311 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 78
# ** Note: $stop    : ./PC_IR_ROM.sv(81)
#    Time: 311 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 81
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 327 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:31:33 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:31:33 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:31:33 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:31:33 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:31:33 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:31:33 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:31:34 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:31:34 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:31:35 on Jun 01,2025, Elapsed time: 0:00:29
# Errors: 3, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:31:35 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: at testing IR Expected 0, actual:     1
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 64
# Success.   5
# Success.   7
# ** Error: inst_out should be 2, inst _out = 0001
#    Time: 151 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 78
# ** Note: $stop    : ./PC_IR_ROM.sv(81)
#    Time: 151 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 81
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 159 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:31:51 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:31:51 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:31:51 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:31:51 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:31:51 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:31:51 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:31:51 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:31:51 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:31:54 on Jun 01,2025, Elapsed time: 0:00:19
# Errors: 2, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:31:54 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: at testing IR Expected 0, actual:     1
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 64
# Success.   5
# ** Error: Error! The mem_adress is:   8
#    Time: 171 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 74
# ** Error: inst_out should be 2, inst _out = 0001
#    Time: 171 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 78
# ** Note: $stop    : ./PC_IR_ROM.sv(81)
#    Time: 171 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 81
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 180 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:32:15 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:32:15 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:32:16 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:32:16 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:32:16 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:32:16 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:32:16 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:32:16 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:32:18 on Jun 01,2025, Elapsed time: 0:00:24
# Errors: 3, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:32:18 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: at testing IR Expected 0, actual:     1
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 64
# Success.   5
# ** Error: Error! The mem_adress is:   9
#    Time: 191 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 74
# Success. inst_out =    16
# ** Note: $stop    : ./PC_IR_ROM.sv(81)
#    Time: 191 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 81
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 201 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:34:22 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:34:22 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:34:22 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:34:22 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:34:22 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:34:22 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:34:22 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:34:22 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:34:24 on Jun 01,2025, Elapsed time: 0:02:06
# Errors: 2, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:34:24 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: at testing IR Expected 0, actual:     1
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 64
# Success.   5
# Success.   7
# ** Error: inst_out should be 2, inst _out =     1
#    Time: 151 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 78
# ** Note: $stop    : ./PC_IR_ROM.sv(81)
#    Time: 151 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 81
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 159 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:34:51 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:34:52 on Jun 01,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:34:52 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:34:52 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:34:52 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:34:52 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:34:52 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:34:52 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:34:53 on Jun 01,2025, Elapsed time: 0:00:29
# Errors: 2, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:34:53 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: at testing IR Expected 0, actual:     1
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 64
# Success.   5
# ** Error: Error! The mem_adress is:   8
#    Time: 171 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 74
# ** Error: inst_out should be 2, inst _out =     1
#    Time: 171 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 78
# ** Note: $stop    : ./PC_IR_ROM.sv(81)
#    Time: 171 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 81
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 180 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:35:13 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:35:13 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:35:13 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:35:13 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:35:13 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:35:13 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:35:13 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:35:13 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:35:15 on Jun 01,2025, Elapsed time: 0:00:22
# Errors: 3, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:35:15 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: at testing IR Expected 0, actual:     1
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 64
# Success.   5
# ** Error: Error! The mem_adress is:   9
#    Time: 191 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 74
# Success. inst_out =    10
# ** Note: $stop    : ./PC_IR_ROM.sv(81)
#    Time: 191 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 81
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 201 ps
# 
# End
# A time value could not be extracted from the current line
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:35:45 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:35:45 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:35:45 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:35:45 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:35:46 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:35:46 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:35:46 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:35:46 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:35:48 on Jun 01,2025, Elapsed time: 0:00:33
# Errors: 2, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:35:48 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: at testing IR Expected 0, actual:     1
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 64
# Success.   5
# ** Error: Error! The mem_adress is:   8
#    Time: 173 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 74
# ** Error: inst_out should be 2, inst _out =     1
#    Time: 173 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 78
# ** Note: $stop    : ./PC_IR_ROM.sv(81)
#    Time: 173 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 81
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 182 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:06 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:36:07 on Jun 01,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:07 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:36:07 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:07 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:36:07 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:36:07 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:36:07 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:36:09 on Jun 01,2025, Elapsed time: 0:00:21
# Errors: 3, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:36:09 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: at testing IR Expected 0, actual:     1
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 64
# Success.   5
# ** Error: Error! The mem_adress is:   9
#    Time: 193 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 74
# Success. inst_out =    10
# ** Note: $stop    : ./PC_IR_ROM.sv(81)
#    Time: 193 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 81
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 203 ps
# 
# End
# A time value could not be extracted from the current line
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:40:05 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:40:05 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:40:05 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:40:05 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:40:05 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:40:05 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:40:05 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:40:05 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:40:07 on Jun 01,2025, Elapsed time: 0:03:58
# Errors: 2, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:40:07 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# PC address correct:   7
# ** Error: inst_out expected 10 but got     1
#    Time: 170 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 74
# ** Note: $stop    : ./PC_IR_ROM.sv(78)
#    Time: 170 ps  Iteration: 1  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 78
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 179 ps
# 
# End
do runPC_IR_ROM.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:43:32 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 15:43:32 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:43:32 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 15:43:32 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:43:32 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 15:43:32 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC_IR_ROM.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 15:43:32 on Jun 01,2025
# vlog -reportprogress 300 -work work "+acc" ./PC_IR_ROM.sv 
# -- Compiling module PC_IR_ROM
# -- Compiling module PC_IR_ROM_tb
# 
# Top level modules:
# 	PC_IR_ROM_tb
# End time: 15:43:32 on Jun 01,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  PC_IR_ROM_tb
# End time: 15:43:35 on Jun 01,2025, Elapsed time: 0:03:28
# Errors: 1, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug PC_IR_ROM_tb 
# Start time: 15:43:35 on Jun 01,2025
# Loading sv_std.std
# Loading work.PC_IR_ROM_tb
# Loading work.PC_IR_ROM
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do PC_IR_ROM_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /PC_IR_ROM_tb/Clk
# add wave -noupdate /PC_IR_ROM_tb/PC_Clr
# add wave -noupdate /PC_IR_ROM_tb/PC_Up
# add wave -noupdate /PC_IR_ROM_tb/IR_ld
# add wave -noupdate /PC_IR_ROM_tb/inst_out
# 
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 0 PC_Clr = 1, PC_Up = 1, IR_ld = 1, inst_out =     x 
# ** Error: at testing IR Expected 0, actual:     1
#    Time: 111 ps  Scope: PC_IR_ROM_tb File: ./PC_IR_ROM.sv Line: 74
# Success.   5
# Success.   7
# Success. inst_out =    10
# ** Note: $stop    : ./PC_IR_ROM.sv(93)
#    Time: 191 ps  Iteration: 0  Instance: /PC_IR_ROM_tb
# Break in Module PC_IR_ROM_tb at ./PC_IR_ROM.sv line 93
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 201 ps
# 
# End
# End time: 16:22:52 on Jun 01,2025, Elapsed time: 0:39:17
# Errors: 1, Warnings: 0
