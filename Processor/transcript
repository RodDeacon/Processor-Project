# Reading pref.tcl
do runProcessor.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:59:33 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 18:59:33 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
#vlog -work work +acc "./PC.sv"
#vlog -work work +acc "./InstMemory.v"
#vlog -work work +acc "./IR.sv"
#vlog -work work +acc "./StateMachine.sv"
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:59:33 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 18:59:33 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
#vlog -work work +acc "./DataMemory.v"
#vlog -work work +acc "./Mux_2_to_1.sv"
#vlog -work work +acc "./ALU.sv"
#vlog -work work +acc "./RegisterFile.sv"
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:59:33 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 18:59:33 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:59:33 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 18:59:33 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:59:33 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 18:59:33 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 18:59:33 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# ** Error: (vsim-3033) Instantiation of 'PC' failed. The design unit was not found.
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_CU File: ./ControlUnit.sv Line: 59
#         Searched libraries:
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/220model
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/sgate
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera_mf
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera_lnsim
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/cycloneive
#             C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work
#             C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work
# ** Error: (vsim-3033) Instantiation of 'InstMemory' failed. The design unit was not found.
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_CU File: ./ControlUnit.sv Line: 61
#         Searched libraries:
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/220model
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/sgate
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera_mf
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera_lnsim
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/cycloneive
#             C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work
#             C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work
# ** Error: (vsim-3033) Instantiation of 'IR' failed. The design unit was not found.
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_CU File: ./ControlUnit.sv Line: 63
#         Searched libraries:
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/220model
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/sgate
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera_mf
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera_lnsim
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/cycloneive
#             C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work
#             C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work
# ** Error: (vsim-3033) Instantiation of 'StateMachine' failed. The design unit was not found.
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_CU File: ./ControlUnit.sv Line: 65
#         Searched libraries:
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/220model
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/sgate
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera_mf
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera_lnsim
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/cycloneive
#             C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work
#             C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work
# Loading work.DataPath
# ** Error: (vsim-3033) Instantiation of 'DataMemory' failed. The design unit was not found.
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./DataPath.sv Line: 26
#         Searched libraries:
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/220model
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/sgate
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera_mf
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera_lnsim
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/cycloneive
#             C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work
#             C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work
# ** Error: (vsim-3033) Instantiation of 'Mux_2_to_1' failed. The design unit was not found.
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./DataPath.sv Line: 36
#         Searched libraries:
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/220model
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/sgate
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera_mf
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera_lnsim
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/cycloneive
#             C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work
#             C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work
# ** Error: (vsim-3033) Instantiation of 'RegisterFile' failed. The design unit was not found.
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./DataPath.sv Line: 40
#         Searched libraries:
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/220model
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/sgate
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera_mf
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera_lnsim
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/cycloneive
#             C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work
#             C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work
# ** Error: (vsim-3033) Instantiation of 'ALU' failed. The design unit was not found.
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./DataPath.sv Line: 47
#         Searched libraries:
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/220model
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/sgate
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera_mf
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/altera_lnsim
#             C:/intelFPGA_lite/20.1/modelsim_ase/altera/verilog/cycloneive
#             C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work
#             C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/rtl_work
# Error loading design
# Error: Error loading design
#        Pausing macro execution
# MACRO ./runProcessor.do PAUSED at line 34
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:01:21 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 19:01:21 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:01:21 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 19:01:21 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:01:21 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 19:01:21 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:01:21 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 19:01:21 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:01:21 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 19:01:21 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:01:21 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 19:01:21 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:01:21 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 19:01:21 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:01:21 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 19:01:22 on Jun 05,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:01:22 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:01:22 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:01:22 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:01:22 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:01:22 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 19:01:22 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:01:22 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 19:01:22 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:01:22 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 19:01:22 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 18:59:33 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (8) does not match connection size (7) for port 'PC_Out'. The port definition is at: ./Processor.sv(9).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT File: ./testProcessor.sv Line: 14
# ** Warning: (vsim-3015) [PCDPC] - Port size (7) does not match connection size (8) for port 'PC_Out'. The port definition is at: ./ControlUnit.sv(33).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_CU File: ./Processor.sv Line: 37
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Ra_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Rb_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Processor_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: D.mif, line 26, Invalid Altera-mif record.
# 
# Begin Simulation.
# Time is 0 : Reset = 0   PC_Out = xx   IR_Out = xxxx  State = x  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 10000 : Reset = 0   PC_Out = xx   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 30000 : Reset = 0   PC_Out = 00   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 40000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 50000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 70000 : Reset = 1   PC_Out = 01   IR_Out = 7000  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 90000 : Reset = 1   PC_Out = 01   IR_Out = 7000  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 110000 : Reset = 1   PC_Out = 00   IR_Out = 7000  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 130000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 150000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 170000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 190000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 210000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 230000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 250000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 270000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 290000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 310000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 330000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 350000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 370000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 390000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 410000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 430000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 450000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 470000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 490000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 510000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 530000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 3  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 550000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 570000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 590000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 610000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 630000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 650000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 670000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 690000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 710000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 730000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 750000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 770000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 790000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0011
# Time is 810000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0011
# 
# End of Simulation.
# 
# ** Note: $stop    : ./testProcessor.sv(32)
#    Time: 830 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 32
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 871500 ps
# 
# End
# A time value could not be extracted from the current line
ls
# A.mif           DataMemory_bb.v      Mux_2_to_1.sv      StateMachine.sv   
# A.ver           DataPath.sv          PC.sv              modelsim.ini      
# ALU.sv          IR.sv                Processor.sv       rtl_work          
# ControlUnit.sv  InstMemory.qip       Processor.sv.bak   runProcessor.do   
# D.mif           InstMemory.v         Processor_wave.do  testProcessor.sv  
# D.ver           InstMemory_bb.v      RegAlu.sv          transcript        
# DataMemory.qip  InstMemory_inst.v    RegisterFile.sv    vsim.wlf          
# DataMemory.v    Launch_ModelSim.bat  StateDefs.sv                         
cd ..
# Cannot change directory while a simulation is in progress.
# Use the "quit -sim" command to unload the design first.
ls
# A.mif           DataMemory_bb.v      Mux_2_to_1.sv      StateMachine.sv   
# A.ver           DataPath.sv          PC.sv              modelsim.ini      
# ALU.sv          IR.sv                Processor.sv       rtl_work          
# ControlUnit.sv  InstMemory.qip       Processor.sv.bak   runProcessor.do   
# D.mif           InstMemory.v         Processor_wave.do  testProcessor.sv  
# D.ver           InstMemory_bb.v      RegAlu.sv          transcript        
# DataMemory.qip  InstMemory_inst.v    RegisterFile.sv    vsim.wlf          
# DataMemory.v    Launch_ModelSim.bat  StateDefs.sv                         
quit -sim
# End time: 19:06:01 on Jun 05,2025, Elapsed time: 0:06:28
# Errors: 8, Warnings: 4
cd ..
# reading C:/intelFPGA_lite/20.1/modelsim_ase/win32aloem/../modelsim.ini
ls
# .git                        ProjectAssignment_SimpleProcessor.pdf  
# 05-22-2025-notes.txt        Project_template.docx                  
# ControlUnit                 Project_timeline.pdf                   
# DATA_FROM_CHAT.odt          README.md                              
# Datapath                    enum_crash_course.odt                  
# Launch_ModelSim.bat         garbage                                
# Processor                   testProcessor.sv                       
# Processor2025_Datapath.pdf  transcript                             
cd ControlUnit
# reading modelsim.ini
ls
# A copy.mif           PC_IR_ROM.sv                   
# A.mif                PC_IR_ROM_wave.do              
# A.ver                PC_wave.do                     
# ControlUnit.sv       Processor2025_ControlUnit.pdf  
# ControlUnit.sv.bak   StateDefs.sv                   
# ControlUnit_wave.do  StateMachine.sv                
# DROM_tb.sv           StateMachine.sv.bak            
# DROM_wave.do         StateMachine_wave.do           
# IR.sv                modelsim.ini                   
# IR.sv.bak            rtl_work                       
# IR_wave.do           runControlUnit.do              
# InstMemory.qip       runIR.do                       
# InstMemory.v         runPC.do                       
# InstMemory_bb.v      runPC_IR_ROM.do                
# InstMemory_inst.v    runROM.do                      
# Launch_ModelSim.bat  runStateMachine.do             
# PC.sv                transcript                     
# PC.sv.bak            vsim.wlf                       
do runControlUnit.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:06:18 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 19:06:18 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:06:18 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 19:06:18 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:06:18 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 19:06:18 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:06:18 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 19:06:19 on Jun 05,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:06:19 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 19:06:19 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:06:19 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 19:06:19 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  ControlUnit_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug ControlUnit_tb 
# Start time: 19:06:19 on Jun 05,2025
# Loading sv_std.std
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit_tb
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do ControlUnit_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /ControlUnit_tb/Clk
# add wave -noupdate /ControlUnit_tb/ResetN
# add wave -noupdate /ControlUnit_tb/D_Wr
# add wave -noupdate /ControlUnit_tb/RF_s
# add wave -noupdate /ControlUnit_tb/RF_W_en
# add wave -noupdate /ControlUnit_tb/D_Addr
# add wave -noupdate /ControlUnit_tb/RF_W_Addr
# add wave -noupdate /ControlUnit_tb/RF_Ra_Addr
# add wave -noupdate /ControlUnit_tb/RF_Rb_Addr
# add wave -noupdate /ControlUnit_tb/ALU_s0
# add wave -noupdate /ControlUnit_tb/OutState
# add wave -noupdate /ControlUnit_tb/NextState
# add wave -noupdate /ControlUnit_tb/IR_Out
# add wave -noupdate /ControlUnit_tb/PC_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 1 ResetN = x, OutState = Unknown, NextState = Init, IR_Out = xxxx, PC_Out, xx
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = xxxxxxx
# 10 ResetN = x, OutState = Init, NextState = Fetch, IR_Out = xxxx, PC_Out, xx
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 1
# unit_PC.mem_addr = xxxxxxx
# 20 ResetN = 0, OutState = Init, NextState = Fetch, IR_Out = xxxx, PC_Out, xx
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 1
# unit_PC.mem_addr = xxxxxxx
# 30 ResetN = 0, OutState = Init, NextState = Fetch, IR_Out = xxxx, PC_Out, 00
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 1
# unit_PC.mem_addr = 0000000
# 40 ResetN = 1, OutState = Init, NextState = Fetch, IR_Out = xxxx, PC_Out, 00
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 1
# unit_PC.mem_addr = 0000000
# 50 ResetN = 1, OutState = Fetch, NextState = Decode, IR_Out = xxxx, PC_Out, 00
# PC_UP = 1
# unit_PC.Up = 1
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000000
# 70 ResetN = 1, OutState = Decode, NextState = Init, IR_Out = 7000, PC_Out, 01
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000001
# 90 ResetN = 1, OutState = Init, NextState = Fetch, IR_Out = 7000, PC_Out, 01
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 1
# unit_PC.mem_addr = 0000001
# 110 ResetN = 1, OutState = Fetch, NextState = Decode, IR_Out = 7000, PC_Out, 00
# PC_UP = 1
# unit_PC.Up = 1
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000000
# 130 ResetN = 1, OutState = Decode, NextState = Load_A, IR_Out = 21b1, PC_Out, 01
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000001
# 150 ResetN = 1, OutState = Load_A, NextState = Load_B, IR_Out = 21b1, PC_Out, 01
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000001
# 170 ResetN = 1, OutState = Load_B, NextState = Fetch, IR_Out = 21b1, PC_Out, 01
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000001
# 190 ResetN = 1, OutState = Fetch, NextState = Decode, IR_Out = 21b1, PC_Out, 01
# PC_UP = 1
# unit_PC.Up = 1
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000001
# 210 ResetN = 1, OutState = Decode, NextState = Load_A, IR_Out = 21b1, PC_Out, 02
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000010
# 230 ResetN = 1, OutState = Load_A, NextState = Load_B, IR_Out = 21b1, PC_Out, 02
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000010
# 250 ResetN = 1, OutState = Load_B, NextState = Fetch, IR_Out = 21b1, PC_Out, 02
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000010
# 270 ResetN = 1, OutState = Fetch, NextState = Decode, IR_Out = 21b1, PC_Out, 02
# PC_UP = 1
# unit_PC.Up = 1
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000010
# 290 ResetN = 1, OutState = Decode, NextState = Load_A, IR_Out = 22a2, PC_Out, 03
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000011
# 310 ResetN = 1, OutState = Load_A, NextState = Load_B, IR_Out = 22a2, PC_Out, 03
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000011
# 330 ResetN = 1, OutState = Load_B, NextState = Fetch, IR_Out = 22a2, PC_Out, 03
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000011
# 350 ResetN = 1, OutState = Fetch, NextState = Decode, IR_Out = 22a2, PC_Out, 03
# PC_UP = 1
# unit_PC.Up = 1
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000011
# 370 ResetN = 1, OutState = Decode, NextState = Sub, IR_Out = 4210, PC_Out, 04
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000100
# 390 ResetN = 1, OutState = Sub, NextState = Fetch, IR_Out = 4210, PC_Out, 04
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000100
# 410 ResetN = 1, OutState = Fetch, NextState = Decode, IR_Out = 4210, PC_Out, 04
# PC_UP = 1
# unit_PC.Up = 1
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000100
# 430 ResetN = 1, OutState = Decode, NextState = Load_A, IR_Out = 23c1, PC_Out, 05
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000101
# 450 ResetN = 1, OutState = Load_A, NextState = Load_B, IR_Out = 23c1, PC_Out, 05
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000101
# 470 ResetN = 1, OutState = Load_B, NextState = Fetch, IR_Out = 23c1, PC_Out, 05
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000101
# 490 ResetN = 1, OutState = Fetch, NextState = Decode, IR_Out = 23c1, PC_Out, 05
# PC_UP = 1
# unit_PC.Up = 1
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000101
# 510 ResetN = 1, OutState = Decode, NextState = Add, IR_Out = 3010, PC_Out, 06
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000110
# 530 ResetN = 1, OutState = Add, NextState = Fetch, IR_Out = 3010, PC_Out, 06
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000110
# 550 ResetN = 1, OutState = Fetch, NextState = Decode, IR_Out = 3010, PC_Out, 06
# PC_UP = 1
# unit_PC.Up = 1
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000110
# 570 ResetN = 1, OutState = Decode, NextState = Load_A, IR_Out = 27e1, PC_Out, 07
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000111
# 590 ResetN = 1, OutState = Load_A, NextState = Load_B, IR_Out = 27e1, PC_Out, 07
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000111
# 610 ResetN = 1, OutState = Load_B, NextState = Fetch, IR_Out = 27e1, PC_Out, 07
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000111
# 630 ResetN = 1, OutState = Fetch, NextState = Decode, IR_Out = 27e1, PC_Out, 07
# PC_UP = 1
# unit_PC.Up = 1
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0000111
# 650 ResetN = 1, OutState = Decode, NextState = Sub, IR_Out = 4010, PC_Out, 08
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0001000
# 670 ResetN = 1, OutState = Sub, NextState = Fetch, IR_Out = 4010, PC_Out, 08
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0001000
# 690 ResetN = 1, OutState = Fetch, NextState = Decode, IR_Out = 4010, PC_Out, 08
# PC_UP = 1
# unit_PC.Up = 1
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0001000
# 710 ResetN = 1, OutState = Decode, NextState = Store, IR_Out = 100a, PC_Out, 09
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0001001
# 730 ResetN = 1, OutState = Store, NextState = Fetch, IR_Out = 100a, PC_Out, 09
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0001001
# 750 ResetN = 1, OutState = Fetch, NextState = Decode, IR_Out = 100a, PC_Out, 09
# PC_UP = 1
# unit_PC.Up = 1
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0001001
# 770 ResetN = 1, OutState = Decode, NextState = Store, IR_Out = 1a6a, PC_Out, 0a
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0001010
# 790 ResetN = 1, OutState = Store, NextState = Fetch, IR_Out = 1a6a, PC_Out, 0a
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0001010
# 810 ResetN = 1, OutState = Fetch, NextState = Decode, IR_Out = 1a6a, PC_Out, 0a
# PC_UP = 1
# unit_PC.Up = 1
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0001010
# 830 ResetN = 1, OutState = Decode, NextState = Halt, IR_Out = 5000, PC_Out, 0b
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0001011
# 850 ResetN = 1, OutState = Halt, NextState = Halt, IR_Out = 5000, PC_Out, 0b
# PC_UP = 0
# unit_PC.Up = 0
# unit_PC.Clr = 0
# unit_PC.mem_addr = 0001011
# ** Note: $stop    : ./ControlUnit.sv(133)
#    Time: 24051 ps  Iteration: 0  Instance: /ControlUnit_tb
# Break in Module ControlUnit_tb at ./ControlUnit.sv line 133
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 25254 ps
# 
# End
cd ..
# Cannot change directory while a simulation is in progress.
# Use the "quit -sim" command to unload the design first.
qiot -si,
# invalid command name "qiot"
qiot -sim
# invalid command name "qiot"
ls
# A copy.mif           PC_IR_ROM.sv                   
# A.mif                PC_IR_ROM_wave.do              
# A.ver                PC_wave.do                     
# ControlUnit.sv       Processor2025_ControlUnit.pdf  
# ControlUnit.sv.bak   StateDefs.sv                   
# ControlUnit_wave.do  StateMachine.sv                
# DROM_tb.sv           StateMachine.sv.bak            
# DROM_wave.do         StateMachine_wave.do           
# IR.sv                modelsim.ini                   
# IR.sv.bak            rtl_work                       
# IR_wave.do           runControlUnit.do              
# InstMemory.qip       runIR.do                       
# InstMemory.v         runPC.do                       
# InstMemory_bb.v      runPC_IR_ROM.do                
# InstMemory_inst.v    runROM.do                      
# Launch_ModelSim.bat  runStateMachine.do             
# PC.sv                transcript                     
# PC.sv.bak            vsim.wlf                       
cd ..
# Cannot change directory while a simulation is in progress.
# Use the "quit -sim" command to unload the design first.
quit -sim
# End time: 19:10:52 on Jun 05,2025, Elapsed time: 0:04:33
# Errors: 0, Warnings: 0
ls
# A copy.mif           PC_IR_ROM.sv                   
# A.mif                PC_IR_ROM_wave.do              
# A.ver                PC_wave.do                     
# ControlUnit.sv       Processor2025_ControlUnit.pdf  
# ControlUnit.sv.bak   StateDefs.sv                   
# ControlUnit_wave.do  StateMachine.sv                
# DROM_tb.sv           StateMachine.sv.bak            
# DROM_wave.do         StateMachine_wave.do           
# IR.sv                modelsim.ini                   
# IR.sv.bak            rtl_work                       
# IR_wave.do           runControlUnit.do              
# InstMemory.qip       runIR.do                       
# InstMemory.v         runPC.do                       
# InstMemory_bb.v      runPC_IR_ROM.do                
# InstMemory_inst.v    runROM.do                      
# Launch_ModelSim.bat  runStateMachine.do             
# PC.sv                transcript                     
# PC.sv.bak            vsim.wlf                       
cd ..
# reading C:/intelFPGA_lite/20.1/modelsim_ase/win32aloem/../modelsim.ini
cd Processor
# reading modelsim.ini

do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:11:02 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 19:11:02 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:11:02 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 19:11:02 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:11:02 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 19:11:02 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:11:02 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 19:11:02 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:11:02 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 19:11:02 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:11:02 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 19:11:02 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:11:02 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 19:11:02 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:11:03 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 19:11:03 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:11:03 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:11:03 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:11:03 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:11:03 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:11:03 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 19:11:03 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:11:03 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 19:11:03 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:11:03 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 19:11:03 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 19:11:03 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (8) does not match connection size (7) for port 'PC_Out'. The port definition is at: ./Processor.sv(9).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT File: ./testProcessor.sv Line: 14
# ** Warning: (vsim-3015) [PCDPC] - Port size (7) does not match connection size (8) for port 'PC_Out'. The port definition is at: ./ControlUnit.sv(33).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_CU File: ./Processor.sv Line: 37
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Ra_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Rb_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Processor_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: D.mif, line 26, Invalid Altera-mif record.
# 
# Begin Simulation.
# Time is 0 : Reset = 0   PC_Out = xx   IR_Out = xxxx  State = x  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 10000 : Reset = 0   PC_Out = xx   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 30000 : Reset = 0   PC_Out = 00   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 40000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 50000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 70000 : Reset = 1   PC_Out = 01   IR_Out = 7000  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 90000 : Reset = 1   PC_Out = 01   IR_Out = 7000  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 110000 : Reset = 1   PC_Out = 00   IR_Out = 7000  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 130000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 150000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 170000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 190000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 210000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 230000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 250000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 270000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 290000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 310000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 330000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 350000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 370000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 390000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 410000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 430000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 450000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 470000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 490000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 510000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 530000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 3  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 550000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 570000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 590000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 610000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 630000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 650000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 670000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 690000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 710000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 730000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 750000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 770000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 790000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0011
# Time is 810000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0011
# 
# End of Simulation.
# 
# ** Note: $stop    : ./testProcessor.sv(32)
#    Time: 830 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 32
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 871500 ps
# 
# End
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:12:51 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 19:12:51 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:12:51 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 19:12:51 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:12:51 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 19:12:51 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:12:51 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 19:12:51 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:12:51 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 19:12:51 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:12:51 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 19:12:51 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:12:51 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 19:12:51 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:12:51 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 19:12:51 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:12:51 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:12:51 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:12:52 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:12:52 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:12:52 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 19:12:52 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:12:52 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 19:12:52 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:12:52 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 19:12:52 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# End time: 19:12:53 on Jun 05,2025, Elapsed time: 0:01:50
# Errors: 0, Warnings: 4
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 19:12:53 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (8) does not match connection size (7) for port 'PC_Out'. The port definition is at: ./Processor.sv(9).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT File: ./testProcessor.sv Line: 14
# ** Warning: (vsim-3015) [PCDPC] - Port size (7) does not match connection size (8) for port 'PC_Out'. The port definition is at: ./ControlUnit.sv(33).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_CU File: ./Processor.sv Line: 37
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Ra_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Rb_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Processor_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: D.mif, line 26, Invalid Altera-mif record.
# 
# Begin Simulation.
# Time is 0 : Reset = 0   PC_Out = xx   IR_Out = xxxx  State = x  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 10000 : Reset = 0   PC_Out = xx   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 30000 : Reset = 0   PC_Out = 00   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 40000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 50000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 70000 : Reset = 1   PC_Out = 01   IR_Out = 7000  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 90000 : Reset = 1   PC_Out = 01   IR_Out = 7000  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 110000 : Reset = 1   PC_Out = 00   IR_Out = 7000  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 130000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 150000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 170000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 190000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 210000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 230000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 250000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 270000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 290000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 310000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 330000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 350000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 370000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 390000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 410000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 430000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 450000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 470000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 490000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 510000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 530000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 3  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 550000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 570000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 590000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 610000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 630000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 650000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 670000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 690000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 710000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 730000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 750000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 770000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 790000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0011
# Time is 810000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0011
# 
# End of Simulation.
# 
# True ALU A = xxxx
# ** Note: $stop    : ./testProcessor.sv(35)
#    Time: 830 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 35
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 871500 ps
# 
# End
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:15:27 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 19:15:27 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:15:27 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 19:15:27 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:15:27 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 19:15:27 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:15:27 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 19:15:27 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:15:27 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 19:15:27 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:15:27 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 19:15:27 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:15:27 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 19:15:27 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:15:27 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 19:15:27 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:15:27 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:15:27 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:15:27 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:15:27 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:15:28 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 19:15:28 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:15:28 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 19:15:28 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:15:28 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 19:15:28 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# End time: 19:15:30 on Jun 05,2025, Elapsed time: 0:02:37
# Errors: 0, Warnings: 4
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 19:15:30 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (8) does not match connection size (7) for port 'PC_Out'. The port definition is at: ./Processor.sv(9).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT File: ./testProcessor.sv Line: 14
# ** Warning: (vsim-3015) [PCDPC] - Port size (7) does not match connection size (8) for port 'PC_Out'. The port definition is at: ./ControlUnit.sv(33).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_CU File: ./Processor.sv Line: 37
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Ra_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Rb_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Processor_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: D.mif, line 26, Invalid Altera-mif record.
# 
# Begin Simulation.
# Time is 0 : Reset = 0   PC_Out = xx   IR_Out = xxxx  State = x  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 10000 : Reset = 0   PC_Out = xx   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 30000 : Reset = 0   PC_Out = 00   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 40000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 50000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 70000 : Reset = 1   PC_Out = 01   IR_Out = 7000  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 90000 : Reset = 1   PC_Out = 01   IR_Out = 7000  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 110000 : Reset = 1   PC_Out = 00   IR_Out = 7000  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 130000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 150000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 170000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 190000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 210000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 230000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 250000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 270000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 290000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 310000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 330000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 350000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 370000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 390000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 410000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 430000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 450000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 470000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 490000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 510000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 530000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 3  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 550000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 570000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 590000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 610000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 630000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 650000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 670000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 690000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 710000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 730000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 750000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 770000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 790000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0011
# Time is 810000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0011
# 
# End of Simulation.
# 
# True ALU A = xxxx
# ** Note: $stop    : ./testProcessor.sv(35)
#    Time: 830 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 35
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 871500 ps
# 
# End
ls
# A.mif           DataMemory_bb.v      Mux_2_to_1.sv      StateMachine.sv      
# A.ver           DataPath.sv          PC.sv              modelsim.ini         
# ALU.sv          IR.sv                Processor.sv       rtl_work             
# ControlUnit.sv  InstMemory.qip       Processor.sv.bak   runProcessor.do      
# D.mif           InstMemory.v         Processor_wave.do  testProcessor.sv     
# D.ver           InstMemory_bb.v      RegAlu.sv          testProcessor_og.sv  
# DataMemory.qip  InstMemory_inst.v    RegisterFile.sv    transcript           
# DataMemory.v    Launch_ModelSim.bat  StateDefs.sv       vsim.wlf             
cd ..
# Cannot change directory while a simulation is in progress.
# Use the "quit -sim" command to unload the design first.
ls
# A.mif           DataMemory_bb.v      Mux_2_to_1.sv      StateMachine.sv      
# A.ver           DataPath.sv          PC.sv              modelsim.ini         
# ALU.sv          IR.sv                Processor.sv       rtl_work             
# ControlUnit.sv  InstMemory.qip       Processor.sv.bak   runProcessor.do      
# D.mif           InstMemory.v         Processor_wave.do  testProcessor.sv     
# D.ver           InstMemory_bb.v      RegAlu.sv          testProcessor_og.sv  
# DataMemory.qip  InstMemory_inst.v    RegisterFile.sv    transcript           
# DataMemory.v    Launch_ModelSim.bat  StateDefs.sv       vsim.wlf             
quit -sim
# End time: 19:20:54 on Jun 05,2025, Elapsed time: 0:05:24
# Errors: 0, Warnings: 4
ls
# A.mif           DataMemory_bb.v      Mux_2_to_1.sv      StateMachine.sv      
# A.ver           DataPath.sv          PC.sv              modelsim.ini         
# ALU.sv          IR.sv                Processor.sv       rtl_work             
# ControlUnit.sv  InstMemory.qip       Processor.sv.bak   runProcessor.do      
# D.mif           InstMemory.v         Processor_wave.do  testProcessor.sv     
# D.ver           InstMemory_bb.v      RegAlu.sv          testProcessor_og.sv  
# DataMemory.qip  InstMemory_inst.v    RegisterFile.sv    transcript           
# DataMemory.v    Launch_ModelSim.bat  StateDefs.sv       vsim.wlf             
cd ..
# reading C:/intelFPGA_lite/20.1/modelsim_ase/win32aloem/../modelsim.ini
ls
# .git                        ProjectAssignment_SimpleProcessor.pdf  
# 05-22-2025-notes.txt        Project_template.docx                  
# ControlUnit                 Project_timeline.pdf                   
# DATA_FROM_CHAT.odt          README.md                              
# Datapath                    enum_crash_course.odt                  
# Launch_ModelSim.bat         garbage                                
# Processor                   testProcessor.sv                       
# Processor2025_Datapath.pdf  transcript                             
cd Datapath
# reading modelsim.ini
ls
# ALU.sv            Dtest                       modelsim.ini    
# D.mif             Launch_ModelSim.bat         rtl_work        
# D.ver             Mux_2_to_1.sv               runDataPath.do  
# DMemReg.sv        Processor2025_Datapath.pdf  runRegAlu.do    
# DMemReg.sv.bak    RegAlu.sv                   runrtl.do       
# DRAM.png          RegAlu.sv.bak               transcript      
# DataMemory.qip    RegAlu_wave.do              vsim.wlf        
# DataMemory.v      RegisterFile.sv             wave.do         
# DataMemory_bb.v   RegisterFile.sv.bak         work            
# DataPath.sv       altera_mf                                   
# DataPath_wave.do  greybox_tmp                                 
do runRegAlu.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:21:23 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:21:23 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:21:23 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:21:23 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegAlu.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:21:23 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegAlu.sv 
# -- Compiling module RegAlu
# -- Compiling module RegAlu_tb
# 
# Top level modules:
# 	RegAlu_tb
# End time: 19:21:23 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  RegAlu_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug RegAlu_tb 
# Start time: 19:21:23 on Jun 05,2025
# Loading sv_std.std
# Loading work.RegAlu_tb
# Loading work.RegAlu
# Loading work.RegisterFile
# Loading work.ALU
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do RegAlu_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /RegAlu_tb/RF_W_addr
# add wave -noupdate /RegAlu_tb/RF_Ra_addr
# add wave -noupdate /RegAlu_tb/RF_Rb_addr
# add wave -noupdate /RegAlu_tb/RF_W_en
# add wave -noupdate /RegAlu_tb/Clk
# add wave -noupdate /RegAlu_tb/ALU_s0
# ** UI-Msg: (vish-4014) No objects found matching '/RegAlu_tb/ALU_s0'.
# Executing ONERROR command at macro ./RegAlu_wave.do line 8
# add wave -noupdate /RegAlu_tb/Q
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# A =     x, B =     x
# A =    47, B =     x
# Ra_data (should be 47):    47
# A =    47, B =    17
# Rb_data (should be 17):    17
# yay, it worked. Q should be 64. Q ==    64
# The output q is eqaul to W_data, Q =    64, W_Data =    64 
# yay, it worked Q should be 30. Q ==    30
# The output q is eqaul to W_data, Q =    30, W_Data =    30 
# ** Note: $stop    : ./RegAlu.sv(156)
#    Time: 91 ps  Iteration: 0  Instance: /RegAlu_tb
# Break in Module RegAlu_tb at ./RegAlu.sv line 156
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 96 ps
# 
# End
do runRegAlu.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Datapath/rtl_work/_lib.qdb".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Datapath/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:23:38 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:23:38 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:23:38 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:23:38 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegAlu.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:23:38 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegAlu.sv 
# -- Compiling module RegAlu
# -- Compiling module RegAlu_tb
# 
# Top level modules:
# 	RegAlu_tb
# End time: 19:23:38 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  RegAlu_tb
# End time: 19:23:41 on Jun 05,2025, Elapsed time: 0:02:18
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug RegAlu_tb 
# Start time: 19:23:41 on Jun 05,2025
# Loading sv_std.std
# Loading work.RegAlu_tb
# Loading work.RegAlu
# Loading work.RegisterFile
# Loading work.ALU
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do RegAlu_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /RegAlu_tb/RF_W_addr
# add wave -noupdate /RegAlu_tb/RF_Ra_addr
# add wave -noupdate /RegAlu_tb/RF_Rb_addr
# add wave -noupdate /RegAlu_tb/RF_W_en
# add wave -noupdate /RegAlu_tb/Clk
# add wave -noupdate /RegAlu_tb/ALU_s0
# ** UI-Msg: (vish-4014) No objects found matching '/RegAlu_tb/ALU_s0'.
# Executing ONERROR command at macro ./RegAlu_wave.do line 8
# add wave -noupdate /RegAlu_tb/Q
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# A =     x, B =     x
# A =    47, B =     x
# Ra_data (should be 47):    47
# A =    47, B =    17
# Rb_data (should be 17):    17
# True A =    47
# yay, it worked. Q should be 64. Q ==    64
# The output q is eqaul to W_data, Q =    64, W_Data =    64 
# yay, it worked Q should be 30. Q ==    30
# The output q is eqaul to W_data, Q =    30, W_Data =    30 
# ** Note: $stop    : ./RegAlu.sv(156)
#    Time: 91 ps  Iteration: 0  Instance: /RegAlu_tb
# Break in Module RegAlu_tb at ./RegAlu.sv line 156
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 96 ps
# 
# End
do runRegAlu.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Datapath/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Datapath/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Datapath/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:06 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:24:06 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:06 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:24:06 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegAlu.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:07 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegAlu.sv 
# -- Compiling module RegAlu
# -- Compiling module RegAlu_tb
# 
# Top level modules:
# 	RegAlu_tb
# End time: 19:24:07 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  RegAlu_tb
# End time: 19:24:09 on Jun 05,2025, Elapsed time: 0:00:28
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug RegAlu_tb 
# Start time: 19:24:09 on Jun 05,2025
# Loading sv_std.std
# Loading work.RegAlu_tb
# Loading work.RegAlu
# Loading work.RegisterFile
# Loading work.ALU
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do RegAlu_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /RegAlu_tb/RF_W_addr
# add wave -noupdate /RegAlu_tb/RF_Ra_addr
# add wave -noupdate /RegAlu_tb/RF_Rb_addr
# add wave -noupdate /RegAlu_tb/RF_W_en
# add wave -noupdate /RegAlu_tb/Clk
# add wave -noupdate /RegAlu_tb/ALU_s0
# ** UI-Msg: (vish-4014) No objects found matching '/RegAlu_tb/ALU_s0'.
# Executing ONERROR command at macro ./RegAlu_wave.do line 8
# add wave -noupdate /RegAlu_tb/Q
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# A =     x, B =     x
# A =    47, B =     x
# Ra_data (should be 47):    47
# A =    47, B =    17
# Rb_data (should be 17):    17
# True A =    47
# yay, it worked. Q should be 64. Q ==    64
# The output q is eqaul to W_data, Q =    64, W_Data =    64 
# yay, it worked Q should be 30. Q ==    30
# The output q is eqaul to W_data, Q =    30, W_Data =    30 
# ** Note: $stop    : ./RegAlu.sv(156)
#    Time: 91 ps  Iteration: 0  Instance: /RegAlu_tb
# Break in Module RegAlu_tb at ./RegAlu.sv line 156
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 96 ps
# 
# End
do runRegAlu.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Datapath/rtl_work/_lib1_0.qpg".
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Datapath/rtl_work/_lib1_0.qtl".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Datapath/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:36 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:24:36 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:36 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:24:36 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegAlu.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:24:36 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegAlu.sv 
# -- Compiling module RegAlu
# -- Compiling module RegAlu_tb
# 
# Top level modules:
# 	RegAlu_tb
# End time: 19:24:36 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  RegAlu_tb
# End time: 19:24:39 on Jun 05,2025, Elapsed time: 0:00:30
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug RegAlu_tb 
# Start time: 19:24:39 on Jun 05,2025
# Loading sv_std.std
# Loading work.RegAlu_tb
# Loading work.RegAlu
# Loading work.RegisterFile
# Loading work.ALU
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do RegAlu_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /RegAlu_tb/RF_W_addr
# add wave -noupdate /RegAlu_tb/RF_Ra_addr
# add wave -noupdate /RegAlu_tb/RF_Rb_addr
# add wave -noupdate /RegAlu_tb/RF_W_en
# add wave -noupdate /RegAlu_tb/Clk
# add wave -noupdate /RegAlu_tb/ALU_s0
# ** UI-Msg: (vish-4014) No objects found matching '/RegAlu_tb/ALU_s0'.
# Executing ONERROR command at macro ./RegAlu_wave.do line 8
# add wave -noupdate /RegAlu_tb/Q
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# A =     x, B =     x
# A =    47, B =     x
# Ra_data (should be 47):    47
# A =    47, B =    17
# Rb_data (should be 17):    17
# yay, it worked. Q should be 64. Q ==    64
# The output q is eqaul to W_data, Q =    64, W_Data =    64 
# yay, it worked Q should be 30. Q ==    30
# The output q is eqaul to W_data, Q =    30, W_Data =    30 
# ** Note: $stop    : ./RegAlu.sv(156)
#    Time: 91 ps  Iteration: 0  Instance: /RegAlu_tb
# Break in Module RegAlu_tb at ./RegAlu.sv line 156
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 96 ps
# 
# End
# A time value could not be extracted from the current line
quit -sim
# End time: 19:25:09 on Jun 05,2025, Elapsed time: 0:00:30
# Errors: 0, Warnings: 0
pwd
# C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Datapath
do runRegAlu.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:26:34 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:26:34 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:26:34 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:26:34 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegAlu.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:26:34 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegAlu.sv 
# -- Compiling module RegAlu
# -- Compiling module RegAlu_tb
# 
# Top level modules:
# 	RegAlu_tb
# End time: 19:26:34 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  RegAlu_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug RegAlu_tb 
# Start time: 19:26:34 on Jun 05,2025
# Loading sv_std.std
# Loading work.RegAlu_tb
# Loading work.RegAlu
# Loading work.RegisterFile
# Loading work.ALU
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do RegAlu_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /RegAlu_tb/RF_W_addr
# add wave -noupdate /RegAlu_tb/RF_Ra_addr
# add wave -noupdate /RegAlu_tb/RF_Rb_addr
# add wave -noupdate /RegAlu_tb/RF_W_en
# add wave -noupdate /RegAlu_tb/Clk
# add wave -noupdate /RegAlu_tb/ALU_s0
# ** UI-Msg: (vish-4014) No objects found matching '/RegAlu_tb/ALU_s0'.
# Executing ONERROR command at macro ./RegAlu_wave.do line 8
# add wave -noupdate /RegAlu_tb/Q
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# A =     x, B =     x
# A =    47, B =     x
# Ra_data (should be 47):    47
# A =    47, B =    17
# Rb_data (should be 17):    17
# yay, it worked. Q should be 64. Q ==    64
# The output q is eqaul to W_data, Q =    64, W_Data =    64 
# True A =    47
# yay, it worked Q should be 30. Q ==    30
# The output q is eqaul to W_data, Q =    30, W_Data =    30 
# ** Note: $stop    : ./RegAlu.sv(137)
#    Time: 91 ps  Iteration: 0  Instance: /RegAlu_tb
# Break in Module RegAlu_tb at ./RegAlu.sv line 137
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 96 ps
# 
# End
# A time value could not be extracted from the current line
quit -sim
# End time: 19:27:07 on Jun 05,2025, Elapsed time: 0:00:33
# Errors: 0, Warnings: 0
do runDataPath.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:27:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:27:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:27:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:27:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:27:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 19:27:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:27:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 19:27:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:27:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# ** Error: ./DataPath.sv(151): (vlog-2730) Undefined variable: 'Mux0'.
# ./DataPath.sv(178): Verilog Compiler exiting
# End time: 19:27:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 1, Warnings: 0
# ** Error: C:/intelFPGA_lite/20.1/modelsim_ase/win32aloem/vlog failed.
# Error in macro ./runDataPath.do line 20
# C:/intelFPGA_lite/20.1/modelsim_ase/win32aloem/vlog failed.
#     while executing
# "vlog -work work +acc "./DataPath.sv""
do runDataPath.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:28:33 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:28:33 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:28:34 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:28:34 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:28:34 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 19:28:34 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:28:34 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 19:28:34 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:28:34 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 19:28:34 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 19:28:34 on Jun 05,2025
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3008) [CNNODP] - Component name (W_data) is not on a downward path.
#    Time: 0 ps  Iteration: 0  Instance: /DataPath_tb File: ./DataPath.sv Line: 153
# ** Error: (vsim-3043) Unresolved reference to 'W_data' in DUT.W_data.
#    Time: 0 ps  Iteration: 0  Instance: /DataPath_tb File: ./DataPath.sv Line: 153
# ** Warning: (vsim-3008) [CNNODP] - Component name (ALU_out) is not on a downward path.
#    Time: 0 ps  Iteration: 0  Instance: /DataPath_tb File: ./DataPath.sv Line: 153
# ** Error: (vsim-3043) Unresolved reference to 'ALU_out' in DUT.unit_ALU.ALU_out.
#    Time: 0 ps  Iteration: 0  Instance: /DataPath_tb File: ./DataPath.sv Line: 153
# Error loading design
# Error: Error loading design
#        Pausing macro execution
# MACRO ./runDataPath.do PAUSED at line 26
quit -sim
# End time: 19:39:35 on Jun 05,2025, Elapsed time: 0:11:01
# Errors: 2, Warnings: 2
do runDataPath.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:39:51 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:39:51 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:39:51 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:39:51 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:39:51 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 19:39:51 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:39:51 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 19:39:51 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:39:51 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 19:39:51 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  DataPath_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug DataPath_tb 
# Start time: 19:39:51 on Jun 05,2025
# Loading sv_std.std
# Loading work.DataPath_tb
# Loading work.DataPath
# Loading work.DataMemory
# Loading altera_mf_ver.altsyncram
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3008) [CNNODP] - Component name (W_data) is not on a downward path.
#    Time: 0 ps  Iteration: 0  Instance: /DataPath_tb File: ./DataPath.sv Line: 153
# ** Error: (vsim-3043) Unresolved reference to 'W_data' in DUT.W_data.
#    Time: 0 ps  Iteration: 0  Instance: /DataPath_tb File: ./DataPath.sv Line: 153
# ** Warning: (vsim-3008) [CNNODP] - Component name (ALU_out) is not on a downward path.
#    Time: 0 ps  Iteration: 0  Instance: /DataPath_tb File: ./DataPath.sv Line: 153
# ** Error: (vsim-3043) Unresolved reference to 'ALU_out' in DUT.unit_ALU.ALU_out.
#    Time: 0 ps  Iteration: 0  Instance: /DataPath_tb File: ./DataPath.sv Line: 153
# Error loading design
# Error: Error loading design
#        Pausing macro execution
# MACRO ./runDataPath.do PAUSED at line 26
do runRegAlu.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:41:44 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:41:44 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:41:44 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:41:44 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegAlu.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:41:44 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegAlu.sv 
# -- Compiling module RegAlu
# -- Compiling module RegAlu_tb
# 
# Top level modules:
# 	RegAlu_tb
# End time: 19:41:44 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  RegAlu_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug RegAlu_tb 
# Start time: 19:39:51 on Jun 05,2025
# Loading sv_std.std
# Loading work.RegAlu_tb
# Loading work.RegAlu
# Loading work.RegisterFile
# Loading work.ALU
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do RegAlu_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /RegAlu_tb/RF_W_addr
# add wave -noupdate /RegAlu_tb/RF_Ra_addr
# add wave -noupdate /RegAlu_tb/RF_Rb_addr
# add wave -noupdate /RegAlu_tb/RF_W_en
# add wave -noupdate /RegAlu_tb/Clk
# add wave -noupdate /RegAlu_tb/ALU_s0
# ** UI-Msg: (vish-4014) No objects found matching '/RegAlu_tb/ALU_s0'.
# Executing ONERROR command at macro ./RegAlu_wave.do line 8
# add wave -noupdate /RegAlu_tb/Q
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# A =     x, B =     x
# A =    47, B =     x
# Ra_data (should be 47):    47
# A =    47, B =    17
# Rb_data (should be 17):    17
# yay, it worked. Q should be 64. Q ==    64
# The output q is eqaul to W_data, Q =    64, W_Data =    64 
# True A =    47
# yay, it worked Q should be 30. Q ==    30
# The output q is eqaul to W_data, Q =    30, W_Data =    30 
# ** Note: $stop    : ./RegAlu.sv(137)
#    Time: 91 ps  Iteration: 0  Instance: /RegAlu_tb
# Break in Module RegAlu_tb at ./RegAlu.sv line 137
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 96 ps
# 
# End
# A time value could not be extracted from the current line
quit -sim
# End time: 19:43:00 on Jun 05,2025, Elapsed time: 0:03:09
# Errors: 2, Warnings: 2
cd ..
# reading C:/intelFPGA_lite/20.1/modelsim_ase/win32aloem/../modelsim.ini
ls
# .git                        ProjectAssignment_SimpleProcessor.pdf  
# 05-22-2025-notes.txt        Project_template.docx                  
# ControlUnit                 Project_timeline.pdf                   
# DATA_FROM_CHAT.odt          README.md                              
# Datapath                    enum_crash_course.odt                  
# Launch_ModelSim.bat         garbage                                
# Processor                   testProcessor.sv                       
# Processor2025_Datapath.pdf  transcript                             
cd Processor
# reading modelsim.ini
ls
# A.mif            DataPath.sv          PC.sv              rtl_work             
# A.ver            DataPath_old.sv      Processor.sv       runProcessor.do      
# ALU.sv           IR.sv                Processor.sv.bak   testProcessor.sv     
# ControlUnit.sv   InstMemory.qip       Processor_wave.do  testProcessor_og.sv  
# D.mif            InstMemory.v         RegAlu.sv          transcript           
# D.ver            InstMemory_bb.v      RegisterFile.sv    vsim.wlf             
# DataMemory.qip   InstMemory_inst.v    StateDefs.sv                            
# DataMemory.v     Launch_ModelSim.bat  StateMachine.sv                         
# DataMemory_bb.v  Mux_2_to_1.sv        modelsim.ini                            
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:09 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 19:43:10 on Jun 05,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 19:43:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 19:43:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 19:43:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 19:43:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 19:43:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 19:43:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 19:43:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:43:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# ** Error: ./RegisterFile.sv(122): (vlog-2730) Undefined variable: 'Clk'.
# End time: 19:43:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 1, Warnings: 0
# ** Error: C:/intelFPGA_lite/20.1/modelsim_ase/win32aloem/vlog failed.
# Error in macro ./runProcessor.do line 25
# C:/intelFPGA_lite/20.1/modelsim_ase/win32aloem/vlog failed.
#     while executing
# "vlog -work work +acc "./RegisterFile.sv""
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:24 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 19:43:24 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:24 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 19:43:24 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:24 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 19:43:24 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:24 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 19:43:25 on Jun 05,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 19:43:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 19:43:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 19:43:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 19:43:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:43:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:43:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 19:43:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 19:43:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:43:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 19:43:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 19:43:25 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (8) does not match connection size (7) for port 'PC_Out'. The port definition is at: ./Processor.sv(9).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT File: ./testProcessor.sv Line: 14
# ** Warning: (vsim-3015) [PCDPC] - Port size (7) does not match connection size (8) for port 'PC_Out'. The port definition is at: ./ControlUnit.sv(33).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_CU File: ./Processor.sv Line: 37
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Ra_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Rb_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Processor_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: D.mif, line 26, Invalid Altera-mif record.
# 
# Begin Simulation.
# Time is 0 : Reset = 0   PC_Out = xx   IR_Out = xxxx  State = x  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 10000 : Reset = 0   PC_Out = xx   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 30000 : Reset = 0   PC_Out = 00   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 40000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 50000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 70000 : Reset = 1   PC_Out = 01   IR_Out = 7000  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 90000 : Reset = 1   PC_Out = 01   IR_Out = 7000  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 110000 : Reset = 1   PC_Out = 00   IR_Out = 7000  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 130000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 150000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 170000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 190000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 210000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 230000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 250000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 270000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 290000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 310000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 330000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 350000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 370000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 390000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 410000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 430000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 450000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 470000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 490000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 510000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 530000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 3  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 550000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 570000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 590000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 610000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 630000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 650000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 670000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 690000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 710000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 730000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 750000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 770000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 790000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0011
# Time is 810000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0011
# 
# End of Simulation.
# 
# True ALU A = xxxx
# ** Note: $stop    : ./testProcessor.sv(35)
#    Time: 830 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 35
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 871500 ps
# 
# End
quit -sim
# End time: 19:48:21 on Jun 05,2025, Elapsed time: 0:04:56
# Errors: 0, Warnings: 4
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:48:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 19:48:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:48:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 19:48:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:48:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 19:48:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:48:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 19:48:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:48:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 19:48:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:48:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 19:48:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:48:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 19:48:26 on Jun 05,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:48:26 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 19:48:26 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:48:26 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:48:26 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:48:26 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:48:26 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:48:26 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 19:48:26 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:48:26 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 19:48:26 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:48:26 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 19:48:26 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 19:48:26 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (8) does not match connection size (7) for port 'PC_Out'. The port definition is at: ./Processor.sv(9).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT File: ./testProcessor.sv Line: 14
# ** Warning: (vsim-3015) [PCDPC] - Port size (7) does not match connection size (8) for port 'PC_Out'. The port definition is at: ./ControlUnit.sv(33).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_CU File: ./Processor.sv Line: 37
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Ra_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Rb_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Processor_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: D.mif, line 26, Invalid Altera-mif record.
# 
# Begin Simulation.
# Time is 0 : Reset = 0   PC_Out = xx   IR_Out = xxxx  State = x  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 10000 : Reset = 0   PC_Out = xx   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 30000 : Reset = 0   PC_Out = 00   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 40000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 50000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 70000 : Reset = 1   PC_Out = 01   IR_Out = 7000  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 90000 : Reset = 1   PC_Out = 01   IR_Out = 7000  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 110000 : Reset = 1   PC_Out = 00   IR_Out = 7000  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 130000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 150000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 170000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 190000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 210000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 230000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 250000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 270000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 290000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 310000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 330000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 350000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 370000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 390000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 410000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 430000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 450000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 470000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 490000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 510000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 530000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 3  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 550000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 570000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 590000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 610000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 630000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 650000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 670000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 690000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 710000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 730000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 750000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 770000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 790000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0011
# Time is 810000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0011
# 
# End of Simulation.
# 
# True ALU A = xxxx
# ** Note: $stop    : ./testProcessor.sv(35)
#    Time: 830 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 35
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 871500 ps
# 
# End
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:49:54 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 19:49:54 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:49:54 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 19:49:55 on Jun 05,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:49:55 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 19:49:55 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:49:55 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 19:49:55 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:49:55 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 19:49:55 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:49:55 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 19:49:55 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:49:55 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 19:49:55 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:49:55 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 19:49:55 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:49:55 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:49:55 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:49:55 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:49:55 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:49:55 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 19:49:55 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:49:55 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 19:49:55 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:49:55 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 19:49:55 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# End time: 19:49:58 on Jun 05,2025, Elapsed time: 0:01:32
# Errors: 0, Warnings: 4
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 19:49:58 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (8) does not match connection size (7) for port 'PC_Out'. The port definition is at: ./Processor.sv(9).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT File: ./testProcessor.sv Line: 14
# ** Warning: (vsim-3015) [PCDPC] - Port size (7) does not match connection size (8) for port 'PC_Out'. The port definition is at: ./ControlUnit.sv(33).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_CU File: ./Processor.sv Line: 37
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Ra_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Rb_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Processor_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: D.mif, line 26, Invalid Altera-mif record.
# 
# Begin Simulation.
# Time is 0 : Reset = 0   PC_Out = xx   IR_Out = xxxx  State = x  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 10000 : Reset = 0   PC_Out = xx   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 30000 : Reset = 0   PC_Out = 00   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 40000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 50000 : Reset = 1   PC_Out = 00   IR_Out = xxxx  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 70000 : Reset = 1   PC_Out = 01   IR_Out = 7000  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 90000 : Reset = 1   PC_Out = 01   IR_Out = 7000  State = 7  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 110000 : Reset = 1   PC_Out = 00   IR_Out = 7000  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 130000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 150000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 170000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 190000 : Reset = 1   PC_Out = 01   IR_Out = 21b1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 210000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 230000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 250000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 270000 : Reset = 1   PC_Out = 02   IR_Out = 21b1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 290000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 310000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 330000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 350000 : Reset = 1   PC_Out = 03   IR_Out = 22a2  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 370000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = xxxx
# Time is 390000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 410000 : Reset = 1   PC_Out = 04   IR_Out = 4210  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 430000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 450000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 470000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 490000 : Reset = 1   PC_Out = 05   IR_Out = 23c1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 510000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0010
# Time is 530000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 3  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 550000 : Reset = 1   PC_Out = 06   IR_Out = 3010  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 570000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 590000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 2  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 610000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 6  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 630000 : Reset = 1   PC_Out = 07   IR_Out = 27e1  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 650000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 670000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 4  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 690000 : Reset = 1   PC_Out = 08   IR_Out = 4010  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 710000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 730000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 750000 : Reset = 1   PC_Out = 09   IR_Out = 100a  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 770000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 9  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0000
# Time is 790000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 1  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0011
# Time is 810000 : Reset = 1   PC_Out = 0a   IR_Out = 1a6a  State = 8  ALU A = xxxx  ALU B = xxxx ALU Out = xxxx  RA Address = 0011
# 
# End of Simulation.
# 
# True ALU A = xxxx
# ** Note: $stop    : ./testProcessor.sv(35)
#    Time: 830 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 35
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 871500 ps
# 
# End
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:51:55 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 19:51:55 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:51:55 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 19:51:56 on Jun 05,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:51:56 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 19:51:56 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:51:56 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 19:51:56 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:51:56 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 19:51:56 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:51:56 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 19:51:56 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:51:56 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 19:51:56 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:51:56 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 19:51:56 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:51:56 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:51:56 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:51:56 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:51:56 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:51:56 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 19:51:56 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:51:56 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 19:51:56 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:51:56 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 19:51:56 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# End time: 19:52:00 on Jun 05,2025, Elapsed time: 0:02:02
# Errors: 0, Warnings: 4
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 19:52:00 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3008) [CNNODP] - Component name (RF_Ra_Addr) is not on a downward path.
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor File: ./testProcessor.sv Line: 40
# ** Error: (vsim-3043) Unresolved reference to 'RF_Ra_Addr' in DUT.unit_DP.unit_RF.RF_Ra_Addr.
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor File: ./testProcessor.sv Line: 40
# ** Warning: (vsim-3008) [CNNODP] - Component name (RF_Rb_Addr) is not on a downward path.
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor File: ./testProcessor.sv Line: 41
# ** Error: (vsim-3043) Unresolved reference to 'RF_Rb_Addr' in DUT.unit_DP.unit_RF.RF_Rb_Addr.
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor File: ./testProcessor.sv Line: 41
# ** Warning: (vsim-3015) [PCDPC] - Port size (8) does not match connection size (7) for port 'PC_Out'. The port definition is at: ./Processor.sv(9).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT File: ./testProcessor.sv Line: 14
# ** Warning: (vsim-3015) [PCDPC] - Port size (7) does not match connection size (8) for port 'PC_Out'. The port definition is at: ./ControlUnit.sv(33).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_CU File: ./Processor.sv Line: 37
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Ra_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Rb_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# Error loading design
# Error: Error loading design
#        Pausing macro execution
# MACRO ./runProcessor.do PAUSED at line 34
# Error opening C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/(vsim-3015) [PCDPC] - Port size (8) does not match connection size 
# Path name 'C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/(vsim-3015) [PCDPC] - Port size (8) does not match connection size ' doesn't exist.
quit -sim
# End time: 19:52:22 on Jun 05,2025, Elapsed time: 0:00:22
# Errors: 2, Warnings: 6
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:52:24 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 19:52:24 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:52:24 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 19:52:24 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:52:24 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 19:52:25 on Jun 05,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:52:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 19:52:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:52:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 19:52:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:52:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 19:52:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:52:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 19:52:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:52:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 19:52:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:52:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:52:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:52:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:52:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:52:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 19:52:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:52:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 19:52:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:52:25 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 19:52:25 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 19:52:25 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3008) [CNNODP] - Component name (RF_Ra_Addr) is not on a downward path.
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor File: ./testProcessor.sv Line: 40
# ** Error: (vsim-3043) Unresolved reference to 'RF_Ra_Addr' in DUT.unit_DP.unit_RF.RF_Ra_Addr.
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor File: ./testProcessor.sv Line: 40
# ** Warning: (vsim-3015) [PCDPC] - Port size (8) does not match connection size (7) for port 'PC_Out'. The port definition is at: ./Processor.sv(9).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT File: ./testProcessor.sv Line: 14
# ** Warning: (vsim-3015) [PCDPC] - Port size (7) does not match connection size (8) for port 'PC_Out'. The port definition is at: ./ControlUnit.sv(33).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_CU File: ./Processor.sv Line: 37
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Ra_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Rb_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# Error loading design
# Error: Error loading design
#        Pausing macro execution
# MACRO ./runProcessor.do PAUSED at line 34
# Error opening C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/(vsim-3015) [PCDPC] - Port size (8) does not match connection size 
# Path name 'C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/(vsim-3015) [PCDPC] - Port size (8) does not match connection size ' doesn't exist.
# Error opening C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/(vsim-3015) [PCDPC] - Port size (8) does not match connection size 
# Path name 'C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/(vsim-3015) [PCDPC] - Port size (8) does not match connection size ' doesn't exist.
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:53:33 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 19:53:33 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:53:33 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 19:53:33 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:53:33 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 19:53:33 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:53:33 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 19:53:33 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:53:33 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 19:53:33 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:53:33 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 19:53:33 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:53:33 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 19:53:33 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:53:33 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 19:53:33 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:53:33 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:53:33 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:53:33 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:53:33 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:53:33 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 19:53:33 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:53:33 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 19:53:33 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:53:33 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 19:53:34 on Jun 05,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 19:52:25 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (8) does not match connection size (7) for port 'PC_Out'. The port definition is at: ./Processor.sv(9).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT File: ./testProcessor.sv Line: 14
# ** Warning: (vsim-3015) [PCDPC] - Port size (7) does not match connection size (8) for port 'PC_Out'. The port definition is at: ./ControlUnit.sv(33).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_CU File: ./Processor.sv Line: 37
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Ra_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Rb_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Processor_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: D.mif, line 26, Invalid Altera-mif record.
# 
# Begin Simulation.
# 0 input address of A = z
# 
# 
# End of Simulation.
# 
# True ALU A = xxxx
# ** Note: $stop    : ./testProcessor.sv(35)
#    Time: 830 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 35
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 871500 ps
# 
# End
# Error opening C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/(vsim-3015) [PCDPC] - Port size (8) does not match connection size 
# Path name 'C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/(vsim-3015) [PCDPC] - Port size (8) does not match connection size ' doesn't exist.
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:54:52 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 19:54:52 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:54:52 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 19:54:52 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:54:52 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 19:54:52 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:54:52 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 19:54:52 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:54:52 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 19:54:52 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:54:52 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 19:54:52 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:54:52 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 19:54:52 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:54:52 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 19:54:52 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:54:52 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:54:52 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:54:52 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:54:52 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:54:52 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 19:54:52 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:54:52 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 19:54:52 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:54:52 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 19:54:52 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# End time: 19:54:54 on Jun 05,2025, Elapsed time: 0:02:29
# Errors: 1, Warnings: 9
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 19:54:54 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (8) does not match connection size (7) for port 'PC_Out'. The port definition is at: ./Processor.sv(9).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT File: ./testProcessor.sv Line: 14
# ** Error (suppressible): (vsim-3053) Illegal output or inout port connection for port 'PC_Out'.
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_CU File: ./Processor.sv Line: 37
# ** Warning: (vsim-3015) [PCDPC] - Port size (7) does not match connection size (40) for port 'PC_Out'. The port definition is at: ./ControlUnit.sv(33).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_CU File: ./Processor.sv Line: 37
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Ra_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Rb_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 43
# Error loading design
# Error: Error loading design
#        Pausing macro execution
# MACRO ./runProcessor.do PAUSED at line 34
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:57:48 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 19:57:48 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:57:48 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 19:57:48 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:57:48 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 19:57:48 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:57:49 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 19:57:49 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:57:49 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 19:57:49 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:57:49 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 19:57:49 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:57:49 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 19:57:49 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:57:49 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 19:57:49 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:57:49 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 19:57:49 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:57:49 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 19:57:49 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:57:49 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 19:57:49 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:57:49 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 19:57:49 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 19:57:49 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# ** Warning: ./Processor.sv(26): (vlog-2121) Illegal concatenation of an unsized constant. Will treat it as a 32-bit value.
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 19:57:49 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 1
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 19:54:54 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (8) does not match connection size (7) for port 'PC_Out'. The port definition is at: ./Processor.sv(9).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT File: ./testProcessor.sv Line: 14
# ** Warning: (vsim-3015) [PCDPC] - Port size (7) does not match connection size (8) for port 'PC_Out'. The port definition is at: ./ControlUnit.sv(33).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_CU File: ./Processor.sv Line: 39
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Ra_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 45
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Rb_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 45
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Processor_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: D.mif, line 26, Invalid Altera-mif record.
# 
# Begin Simulation.
# 0 input address of A = z
# 
# 
# End of Simulation.
# 
# True ALU A = xxxx
# ** Note: $stop    : ./testProcessor.sv(35)
#    Time: 830 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 35
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 871500 ps
# 
# End
# Error opening C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/(vsim-3015) [PCDPC] - Port size (4) does not match connection size 
# Path name 'C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Processor/(vsim-3015) [PCDPC] - Port size (4) does not match connection size ' doesn't exist.
# A time value could not be extracted from the current line
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:02:18 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 20:02:18 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:02:18 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 20:02:18 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:02:18 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 20:02:18 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:02:18 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 20:02:18 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:02:18 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 20:02:18 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:02:18 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 20:02:18 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:02:18 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 20:02:18 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:02:18 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 20:02:18 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:02:18 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 20:02:18 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:02:18 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 20:02:18 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:02:19 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 20:02:19 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:02:19 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 20:02:19 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:02:19 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 20:02:19 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# End time: 20:02:21 on Jun 05,2025, Elapsed time: 0:07:27
# Errors: 1, Warnings: 8
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 20:02:21 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (8) does not match connection size (7) for port 'PC_Out'. The port definition is at: ./Processor.sv(9).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT File: ./testProcessor.sv Line: 14
# ** Warning: (vsim-3015) [PCDPC] - Port size (7) does not match connection size (8) for port 'PC_Out'. The port definition is at: ./ControlUnit.sv(33).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_CU File: ./Processor.sv Line: 39
# ** Fatal: (vsim-3365) Too many port connections. Expected 9, found 10.
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 45
# FATAL ERROR while loading design
# Error loading design
# Error: Error loading design
#        Pausing macro execution
# MACRO ./runProcessor.do PAUSED at line 34
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:03:41 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 20:03:41 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:03:41 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 20:03:41 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:03:41 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 20:03:41 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:03:41 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 20:03:41 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:03:41 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 20:03:41 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:03:41 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 20:03:41 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:03:41 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 20:03:41 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:03:41 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 20:03:42 on Jun 05,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:03:42 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 20:03:42 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:03:42 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 20:03:42 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:03:42 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 20:03:42 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:03:42 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 20:03:42 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:03:42 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 20:03:42 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 20:02:21 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (8) does not match connection size (7) for port 'PC_Out'. The port definition is at: ./Processor.sv(9).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT File: ./testProcessor.sv Line: 14
# ** Warning: (vsim-3015) [PCDPC] - Port size (7) does not match connection size (8) for port 'PC_Out'. The port definition is at: ./ControlUnit.sv(33).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_CU File: ./Processor.sv Line: 39
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_W_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 45
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Ra_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 45
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Rb_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 45
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Processor_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: D.mif, line 26, Invalid Altera-mif record.
# 
# Begin Simulation.
# 0 input address of A = z
# 
# 
# End of Simulation.
# 
# True ALU A = xxxx
# ** Note: $stop    : ./testProcessor.sv(35)
#    Time: 830 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 35
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 871500 ps
# 
# End
# A time value could not be extracted from the current line
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:05:30 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 20:05:30 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:05:30 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 20:05:30 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:05:30 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 20:05:30 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:05:30 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 20:05:30 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:05:30 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 20:05:31 on Jun 05,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:05:31 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 20:05:31 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:05:31 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 20:05:31 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:05:31 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 20:05:31 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:05:31 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 20:05:31 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:05:31 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 20:05:31 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:05:31 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 20:05:31 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:05:31 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 20:05:31 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:05:31 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 20:05:31 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# End time: 20:05:33 on Jun 05,2025, Elapsed time: 0:03:12
# Errors: 1, Warnings: 7
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 20:05:33 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (8) does not match connection size (7) for port 'PC_Out'. The port definition is at: ./Processor.sv(9).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT File: ./testProcessor.sv Line: 14
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_W_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 46
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Ra_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 46
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Rb_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 46
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Processor_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: D.mif, line 26, Invalid Altera-mif record.
# 
# Begin Simulation.
# 0 input address of A = z
# 
# 
# End of Simulation.
# 
# True ALU A = xxxx
# ** Note: $stop    : ./testProcessor.sv(35)
#    Time: 830 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 35
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 871500 ps
# 
# End
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 20:06:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 20:06:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 20:06:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 20:06:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 20:06:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 20:06:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 20:06:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 20:06:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 20:06:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 20:06:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:10 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 20:06:10 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:11 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 20:06:11 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:11 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 20:06:11 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# End time: 20:06:12 on Jun 05,2025, Elapsed time: 0:00:39
# Errors: 0, Warnings: 4
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 20:06:12 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (8) does not match connection size (7) for port 'PC_Out'. The port definition is at: ./Processor.sv(9).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT File: ./testProcessor.sv Line: 14
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_W_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 46
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Ra_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 46
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Rb_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 46
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Processor_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: D.mif, line 26, Invalid Altera-mif record.
# 
# Begin Simulation.
# 0 input address of A = z
# 
# 
# End of Simulation.
# 
# True ALU A = xxxx
# ** Note: $stop    : ./testProcessor.sv(35)
#    Time: 830 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 35
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 871500 ps
# 
# End
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:20 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 20:06:20 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:20 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 20:06:20 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:20 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 20:06:20 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:20 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 20:06:20 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:20 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 20:06:21 on Jun 05,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:21 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 20:06:21 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:21 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 20:06:21 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:21 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 20:06:21 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:21 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 20:06:21 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:21 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 20:06:21 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:21 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 20:06:21 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:21 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 20:06:21 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:06:21 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 20:06:21 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# End time: 20:06:23 on Jun 05,2025, Elapsed time: 0:00:11
# Errors: 0, Warnings: 4
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 20:06:23 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (8) does not match connection size (7) for port 'PC_Out'. The port definition is at: ./Processor.sv(9).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT File: ./testProcessor.sv Line: 14
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_W_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 46
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Ra_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 46
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Rb_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 46
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Processor_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: D.mif, line 26, Invalid Altera-mif record.
# 
# Begin Simulation.
# 0 input address of A = z
# 
# 
# End of Simulation.
# 
# True ALU A = xxxx
# ** Note: $stop    : ./testProcessor.sv(35)
#    Time: 830 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 35
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 871500 ps
# 
# End
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:08:42 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 20:08:42 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:08:42 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 20:08:42 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:08:42 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 20:08:43 on Jun 05,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:08:43 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 20:08:43 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:08:43 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 20:08:43 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:08:43 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 20:08:43 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:08:43 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 20:08:43 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:08:43 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 20:08:43 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:08:43 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 20:08:43 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:08:43 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 20:08:43 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:08:43 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 20:08:43 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:08:43 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 20:08:43 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:08:43 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 20:08:43 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# End time: 20:08:45 on Jun 05,2025, Elapsed time: 0:02:22
# Errors: 0, Warnings: 4
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 20:08:45 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (8) does not match connection size (7) for port 'PC_Out'. The port definition is at: ./Processor.sv(9).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT File: ./testProcessor.sv Line: 14
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Ra_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 48
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Rb_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 48
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Processor_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: D.mif, line 26, Invalid Altera-mif record.
# 
# Begin Simulation.
# 0 input address of A = z
# 
# 
# End of Simulation.
# 
# True ALU A = xxxx
# ** Note: $stop    : ./testProcessor.sv(35)
#    Time: 830 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 35
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 871500 ps
# 
# End
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:12:07 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 20:12:07 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:12:07 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 20:12:07 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:12:07 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 20:12:08 on Jun 05,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:12:08 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 20:12:08 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:12:08 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 20:12:08 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:12:08 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 20:12:08 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:12:08 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 20:12:08 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:12:08 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 20:12:08 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:12:08 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 20:12:08 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:12:08 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 20:12:08 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:12:08 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 20:12:08 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:12:08 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 20:12:08 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:12:08 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 20:12:08 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# End time: 20:12:16 on Jun 05,2025, Elapsed time: 0:03:31
# Errors: 0, Warnings: 3
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 20:12:16 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Ra_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 48
# ** Warning: (vsim-3015) [PCDPC] - Port size (4) does not match connection size (1) for port 'RF_Rb_addr'. The port definition is at: ./DataPath.sv(14).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT/unit_DP File: ./Processor.sv Line: 48
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Processor_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: D.mif, line 26, Invalid Altera-mif record.
# 
# Begin Simulation.
# 0 input address of A = z
# 
# 
# End of Simulation.
# 
# True ALU A = xxxx
# ** Note: $stop    : ./testProcessor.sv(35)
#    Time: 830 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 35
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 871500 ps
# 
# End
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:16:31 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 20:16:32 on Jun 05,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:16:32 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 20:16:32 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:16:32 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 20:16:32 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:16:32 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 20:16:32 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:16:32 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 20:16:32 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:16:32 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 20:16:32 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:16:32 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 20:16:32 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:16:32 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 20:16:32 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:16:32 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 20:16:32 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:16:32 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 20:16:32 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:16:32 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 20:16:32 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:16:32 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 20:16:32 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:16:32 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 20:16:32 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# End time: 20:16:34 on Jun 05,2025, Elapsed time: 0:04:18
# Errors: 0, Warnings: 2
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 20:16:34 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Processor_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# ERROR: D.mif, line 26, Invalid Altera-mif record.
# 
# Begin Simulation.
# 0 input address of A = x
# 
# 390 input address of A = 2
# 
# 530 input address of A = 0
# 
# 790 input address of A = 3
# 
# 
# End of Simulation.
# 
# True ALU A = xxxx
# ** Note: $stop    : ./testProcessor.sv(35)
#    Time: 830 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 35
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 871500 ps
# 
# End
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:18:12 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 20:18:12 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:18:12 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 20:18:12 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:18:12 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 20:18:12 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:18:12 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 20:18:12 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:18:12 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 20:18:12 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:18:12 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 20:18:12 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:18:12 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 20:18:12 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:18:12 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 20:18:12 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:18:12 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 20:18:13 on Jun 05,2025, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:18:13 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 20:18:13 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:18:13 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 20:18:13 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:18:13 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 20:18:13 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:18:13 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 20:18:13 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# End time: 20:18:15 on Jun 05,2025, Elapsed time: 0:01:41
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 20:18:15 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Processor_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 
# Begin Simulation.
# 0 input address of A = x
# 
# 390 input address of A = 2
# 
# 530 input address of A = 0
# 
# 790 input address of A = 3
# 
# 
# End of Simulation.
# 
# True ALU A = xxxx
# ** Note: $stop    : ./testProcessor.sv(35)
#    Time: 830 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 35
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 871500 ps
# 
# End
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:20:19 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 20:20:19 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:20:19 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 20:20:19 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:20:19 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 20:20:19 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:20:19 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 20:20:19 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:20:20 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 20:20:20 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:20:20 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 20:20:20 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:20:20 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 20:20:20 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:20:20 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 20:20:20 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:20:20 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 20:20:20 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:20:20 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 20:20:20 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:20:20 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 20:20:20 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:20:20 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 20:20:20 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:20:20 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 20:20:20 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# End time: 20:20:23 on Jun 05,2025, Elapsed time: 0:02:08
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 20:20:23 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Processor_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 
# Begin Simulation.
# 0 input address of A = x
# output data of A = xxxx
# 390 input address of A = 2
# output data of A = 21ba
# 530 input address of A = 0
# output data of A = 0000
# 550 input address of A = 0
# output data of A = a04e
# 690 input address of A = 0
# output data of A = 2ea2
# 790 input address of A = 3
# output data of A = xxxx
# 
# End of Simulation.
# 
# True ALU A = xxxx
# ** Note: $stop    : ./testProcessor.sv(35)
#    Time: 830 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 35
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 871500 ps
# 
# End
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:22:41 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 20:22:41 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:22:41 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 20:22:41 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:22:41 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 20:22:41 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:22:41 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 20:22:41 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:22:41 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 20:22:41 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:22:41 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 20:22:41 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:22:41 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 20:22:41 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:22:42 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 20:22:42 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:22:42 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 20:22:42 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:22:42 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 20:22:42 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:22:42 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 20:22:42 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:22:42 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling package testProcessor_sv_unit
# -- Importing package StateDefs
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 20:22:42 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:22:42 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 20:22:42 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# End time: 20:22:47 on Jun 05,2025, Elapsed time: 0:02:24
# Errors: 0, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 20:22:47 on Jun 05,2025
# Loading sv_std.std
# Loading work.StateDefs
# Loading work.testProcessor_sv_unit
# Loading work.testProcessor
# Loading work.Processor
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# ** Error (suppressible): (vsim-3999) Connection type 'enum reg[3:0] StateDefs::State' is incompatible with 'wire[3:0]' for  port (State).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT File: ./testProcessor.sv Line: 16
# ** Error (suppressible): (vsim-3999) Connection type 'enum reg[3:0] StateDefs::State' is incompatible with 'wire[3:0]' for  port (NextState).
#    Time: 0 ps  Iteration: 0  Instance: /testProcessor/DUT File: ./testProcessor.sv Line: 16
# Error loading design
# Error: Error loading design
#        Pausing macro execution
# MACRO ./runProcessor.do PAUSED at line 34
quit -sim
# End time: 20:23:04 on Jun 05,2025, Elapsed time: 0:00:17
# Errors: 2, Warnings: 0
do runProcessor.do
# turn on verbage
# transcript on
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./StateDefs.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:23:05 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateDefs.sv 
# -- Compiling package StateDefs
# 
# Top level modules:
# 	--none--
# End time: 20:23:05 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./PC.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:23:05 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./PC.sv 
# -- Compiling module PC
# -- Compiling module PC_tb
# 
# Top level modules:
# 	PC_tb
# End time: 20:23:05 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./InstMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:23:05 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./InstMemory.v 
# -- Compiling module InstMemory
# 
# Top level modules:
# 	InstMemory
# End time: 20:23:05 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./IR.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:23:06 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./IR.sv 
# -- Compiling module IR
# -- Compiling module IR_tb
# 
# Top level modules:
# 	IR_tb
# End time: 20:23:06 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./StateMachine.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:23:06 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./StateMachine.sv 
# -- Compiling package StateMachine_sv_unit
# -- Importing package StateDefs
# -- Compiling module StateMachine
# -- Compiling module StateMachine_tb
# 
# Top level modules:
# 	StateMachine_tb
# End time: 20:23:06 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ControlUnit.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:23:06 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ControlUnit.sv 
# -- Compiling package ControlUnit_sv_unit
# -- Importing package StateDefs
# -- Compiling module ControlUnit
# -- Compiling module ControlUnit_tb
# 
# Top level modules:
# 	ControlUnit_tb
# End time: 20:23:06 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataMemory.v"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:23:06 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataMemory.v 
# -- Compiling module DataMemory
# 
# Top level modules:
# 	DataMemory
# End time: 20:23:06 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Mux_2_to_1.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:23:06 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Mux_2_to_1.sv 
# -- Compiling module Mux_2_to_1
# -- Compiling module Mux_2_to_1_tb
# 
# Top level modules:
# 	Mux_2_to_1
# 	Mux_2_to_1_tb
# End time: 20:23:06 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:23:06 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 20:23:06 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:23:06 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 20:23:06 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./DataPath.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:23:06 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./DataPath.sv 
# -- Compiling module DataPath
# -- Compiling module DataPath_tb
# 
# Top level modules:
# 	DataPath_tb
# End time: 20:23:06 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./testProcessor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:23:06 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./testProcessor.sv 
# -- Compiling module testProcessor
# 
# Top level modules:
# 	testProcessor
# End time: 20:23:06 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./Processor.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 20:23:06 on Jun 05,2025
# vlog -reportprogress 300 -work work "+acc" ./Processor.sv 
# -- Compiling module Processor
# -- Compiling module Processor_tb
# 
# Top level modules:
# 	Processor
# 	Processor_tb
# End time: 20:23:06 on Jun 05,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  testProcessor
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug testProcessor 
# Start time: 20:23:06 on Jun 05,2025
# Loading sv_std.std
# Loading work.testProcessor
# Loading work.Processor
# Loading work.StateDefs
# Loading work.ControlUnit_sv_unit
# Loading work.ControlUnit
# Loading work.PC
# Loading work.InstMemory
# Loading altera_mf_ver.altsyncram
# Loading work.IR
# Loading work.StateMachine_sv_unit
# Loading work.StateMachine
# Loading work.DataPath
# Loading work.DataMemory
# Loading work.Mux_2_to_1
# Loading work.RegisterFile
# Loading work.ALU
# Loading altera_mf_ver.altsyncram_body
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# WARNING: No extended dataflow license exists
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do Processor_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /testProcessor/Clk
# add wave -noupdate /testProcessor/Reset
# add wave -noupdate /testProcessor/State
# add wave -noupdate /testProcessor/NextState
# add wave -noupdate /testProcessor/IR_Out
# add wave -noupdate /testProcessor/PC_Out
# add wave -noupdate /testProcessor/ALU_A
# add wave -noupdate /testProcessor/ALU_B
# add wave -noupdate /testProcessor/ALU_Out
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# 
# Begin Simulation.
# 0 input address of A = x
# output data of A = xxxx
# 390 input address of A = 2
# output data of A = 21ba
# 530 input address of A = 0
# output data of A = 0000
# 550 input address of A = 0
# output data of A = a04e
# 690 input address of A = 0
# output data of A = 2ea2
# 790 input address of A = 3
# output data of A = xxxx
# 
# End of Simulation.
# 
# True ALU A = xxxx
# ** Note: $stop    : ./testProcessor.sv(35)
#    Time: 830 ns  Iteration: 2  Instance: /testProcessor
# Break in Module testProcessor at ./testProcessor.sv line 35
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 871500 ps
# 
# End
