# Reading pref.tcl
do runRegAlu.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:49:40 on May 31,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 18:49:40 on May 31,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:49:40 on May 31,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 18:49:40 on May 31,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegAlu.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:49:40 on May 31,2025
# vlog -reportprogress 300 -work work "+acc" ./RegAlu.sv 
# -- Compiling module RegAlu
# -- Compiling module RegAlu_tb
# 
# Top level modules:
# 	RegAlu_tb
# End time: 18:49:40 on May 31,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  RegAlu_tb
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug RegAlu_tb 
# Start time: 18:49:41 on May 31,2025
# Loading sv_std.std
# Loading work.RegAlu_tb
# Loading work.RegAlu
# Loading work.RegisterFile
# Loading work.ALU
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do RegAlu_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /RegAlu_tb/RF_W_addr
# add wave -noupdate /RegAlu_tb/RF_Ra_addr
# add wave -noupdate /RegAlu_tb/RF_Rb_addr
# add wave -noupdate /RegAlu_tb/RF_W_en
# add wave -noupdate /RegAlu_tb/Clk
# add wave -noupdate /RegAlu_tb/ALU_s0
# ** UI-Msg: (vish-4014) No objects found matching '/RegAlu_tb/ALU_s0'.
# Executing ONERROR command at macro ./RegAlu_wave.do line 8
# add wave -noupdate /RegAlu_tb/Q
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# A =     x, B =     x
# A =    47, B =     x
# Ra_data (should be 47):    47
# A =    47, B =    17
# Rb_data (should be 17):    17
# A =    47, B =    64
# ** Error: waa waa not working Q should be 64 but it is   111
#    Time: 71 ps  Scope: RegAlu_tb File: ./RegAlu.sv Line: 137
# The output q is eqaul to W_data, Q =   111, W_Data =   111 
# A =    47, B = 65519
# ** Error: waa waa not working Q should be 30 but it is    64
#    Time: 91 ps  Scope: RegAlu_tb File: ./RegAlu.sv Line: 149
# The output q is eqaul to W_data, Q =    64, W_Data =    64 
# ** Note: $stop    : ./RegAlu.sv(155)
#    Time: 91 ps  Iteration: 0  Instance: /RegAlu_tb
# Break in Module RegAlu_tb at ./RegAlu.sv line 155
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 96 ps
# 
# End
do runRegAlu.do
# 
# Get rid of current work lib
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# Error 31: Unable to unlink file "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Datapath/rtl_work/_lib.qdb".
# Error 133: Unable to remove directory "C:/Users/rod/Documents/2025_spring_classes/Processor-Project/Datapath/rtl_work".
# 
# Create work library and map it to 'work'
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# 
# Compile Verilog
#     All Verilog files that are part of this design should have
#     their own "vlog" line below.
# vlog -work work +acc "./RegisterFile.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:52:39 on May 31,2025
# vlog -reportprogress 300 -work work "+acc" ./RegisterFile.sv 
# -- Compiling module RegisterFile
# -- Compiling module RegisterFile_tb
# 
# Top level modules:
# 	RegisterFile_tb
# End time: 18:52:39 on May 31,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./ALU.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:52:39 on May 31,2025
# vlog -reportprogress 300 -work work "+acc" ./ALU.sv 
# -- Compiling module ALU
# -- Compiling module ALU_tb
# 
# Top level modules:
# 	ALU_tb
# End time: 18:52:39 on May 31,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -work work +acc "./RegAlu.sv"
# Model Technology ModelSim - Intel FPGA Edition vlog 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 18:52:39 on May 31,2025
# vlog -reportprogress 300 -work work "+acc" ./RegAlu.sv 
# -- Compiling module RegAlu
# -- Compiling module RegAlu_tb
# 
# Top level modules:
# 	RegAlu_tb
# End time: 18:52:39 on May 31,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# Call vsim to invoke simulator
#     Make sure the last item on the line is the name of the
#     testbench module you want to execute.
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs="+acc" -fsmdebug  RegAlu_tb
# End time: 18:52:42 on May 31,2025, Elapsed time: 0:03:01
# Errors: 2, Warnings: 0
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cycloneive_ver -L rtl_work -L work -voptargs=""+acc"" -fsmdebug RegAlu_tb 
# Start time: 18:52:42 on May 31,2025
# Loading sv_std.std
# Loading work.RegAlu_tb
# Loading work.RegAlu
# Loading work.RegisterFile
# Loading work.ALU
# 
# Source the wave do file
#     This should be the file that sets up the signal window for
#     the module you are testing.
# do RegAlu_wave.do
# onerror {resume}
# quietly WaveActivateNextPane {} 0
# add wave -noupdate /RegAlu_tb/RF_W_addr
# add wave -noupdate /RegAlu_tb/RF_Ra_addr
# add wave -noupdate /RegAlu_tb/RF_Rb_addr
# add wave -noupdate /RegAlu_tb/RF_W_en
# add wave -noupdate /RegAlu_tb/Clk
# add wave -noupdate /RegAlu_tb/ALU_s0
# ** UI-Msg: (vish-4014) No objects found matching '/RegAlu_tb/ALU_s0'.
# Executing ONERROR command at macro ./RegAlu_wave.do line 8
# add wave -noupdate /RegAlu_tb/Q
# TreeUpdate [SetDefaultTree]
# WaveRestoreCursors {{Cursor 1} {0 ps} 0}
# quietly wave cursor active 0
# configure wave -namecolwidth 150
# configure wave -valuecolwidth 100
# configure wave -justifyvalue left
# configure wave -signalnamewidth 0
# configure wave -snapdistance 10
# configure wave -datasetprefix 0
# configure wave -rowmargin 4
# configure wave -childrowmargin 2
# configure wave -gridoffset 0
# configure wave -gridperiod 1
# configure wave -griddelta 40
# configure wave -timeline 0
# configure wave -timelineunits ps
# update
# WaveRestoreZoom {0 ps} {1 ns}
# 
# Set the window types
# view wave
# .main_pane.wave.interior.cs.body.pw.wf
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# 
# Run the simulation
# run -all
# A =     x, B =     x
# A =    47, B =     x
# Ra_data (should be 47):    47
# A =    47, B =    17
# Rb_data (should be 17):    17
# yay, it worked. Q should be 64. Q ==    64
# The output q is eqaul to W_data, Q =    64, W_Data =    64 
# yay, it worked Q should be 30. Q ==    30
# The output q is eqaul to W_data, Q =    30, W_Data =    30 
# ** Note: $stop    : ./RegAlu.sv(156)
#    Time: 91 ps  Iteration: 0  Instance: /RegAlu_tb
# Break in Module RegAlu_tb at ./RegAlu.sv line 156
# 
# View the entire wave display
# wave zoomfull
# 0 ps
# 96 ps
# 
# End
